; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--debug -c --asm -o..\Output\ads7953.o --depend=..\Output\ads7953.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\src -I.\inc -I..\CMSIS -I"E:\Keil 4 ARM\ARM\RV31\Inc" -I"E:\Keil 4 ARM\ARM\CMSIS\Include" -I"E:\Keil 4 ARM\ARM\Inc\ST\STM32F10x" -DSTM32F10X_CL --omf_browse=..\Output\ads7953.crf src\ADS7953.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

SPI1_IRQHandler PROC
        PUSH     {r4,r5,lr}
        MOV      r0,#0xcccc
        MOVS     r2,#0x10
        LDR      r3,|L1.964|
        STR      r2,[r3,#0]
        LDR      r2,|L1.968|
        LDRH     r0,[r2,#8]
        TST      r0,#0xf0
        BEQ      |L1.78|
        TST      r0,#0x20
        BEQ      |L1.40|
        LDRH     r2,[r2,#0]
        ORR      r2,r2,#0x44
        LDR      r3,|L1.968|
        STRH     r2,[r3,#0]
        B        |L1.290|
|L1.40|
        TST      r0,#0x40
        BEQ      |L1.52|
        LDR      r2,|L1.968|
        LDRH     r0,[r2,#0xc]
        B        |L1.290|
|L1.52|
        TST      r0,#0x10
        BEQ      |L1.60|
        B        |L1.290|
|L1.60|
        TST      r0,#0x80
        BEQ      |L1.78|
        NOP      
|L1.68|
        LDR      r2,|L1.968|
        LDRH     r2,[r2,#8]
        TST      r2,#0x80
        BNE      |L1.68|
|L1.78|
        LDR      r2,|L1.968|
        LDRH     r1,[r2,#0xc]
        UBFX     r0,r1,#0,#12
        ADD      r2,r0,r0,LSL #2
        LSLS     r0,r2,#1
        LDR      r2,|L1.972|
        LDRB     r2,[r2,#0]  ; addcount
        CMP      r2,#6
        BEQ      |L1.114|
        CMP      r2,#7
        BNE      |L1.134|
        LDR      r2,|L1.976|
        STRH     r0,[r2,#0]
        LDR      r2,|L1.980|
        STRH     r0,[r2,#0]
        B        |L1.290|
|L1.114|
        LDR      r2,|L1.980|
        LDRH     r2,[r2,#0]  ; max
        CMP      r0,r2
        BLE      |L1.128|
        LDR      r2,|L1.980|
        STRH     r0,[r2,#0]
        B        |L1.132|
|L1.128|
        LDR      r2,|L1.976|
        STRH     r0,[r2,#0]
|L1.132|
        B        |L1.290|
|L1.134|
        NOP      
        NOP      
        LDR      r2,|L1.980|
        LDRH     r2,[r2,#0]  ; max
        CMP      r0,r2
        BLE      |L1.166|
        LDR      r2,|L1.984|
        LDR      r2,[r2,#0]  ; addnum
        LDR      r3,|L1.980|
        LDRH     r3,[r3,#0]  ; max
        ADD      r2,r2,r3
        LDR      r3,|L1.984|
        STR      r2,[r3,#0]  ; addnum
        LDR      r2,|L1.980|
        STRH     r0,[r2,#0]
        B        |L1.204|
|L1.166|
        LDR      r2,|L1.976|
        LDRH     r2,[r2,#0]  ; min
        CMP      r0,r2
        BGE      |L1.194|
        LDR      r2,|L1.984|
        LDR      r2,[r2,#0]  ; addnum
        LDR      r3,|L1.976|
        LDRH     r3,[r3,#0]  ; min
        ADD      r2,r2,r3
        LDR      r3,|L1.984|
        STR      r2,[r3,#0]  ; addnum
        LDR      r2,|L1.976|
        STRH     r0,[r2,#0]
        B        |L1.204|
|L1.194|
        LDR      r2,|L1.984|
        LDR      r2,[r2,#0]  ; addnum
        ADD      r2,r2,r0
        LDR      r3,|L1.984|
        STR      r2,[r3,#0]  ; addnum
|L1.204|
        LDR      r2,|L1.972|
        LDRB     r2,[r2,#0]  ; addcount
        CMP      r2,#1
        BNE      |L1.288|
        LDR      r2,|L1.968|
        LDRH     r2,[r2,#4]
        MOV      r3,#0xffbf
        ANDS     r2,r2,r3
        LDR      r3,|L1.968|
        STRH     r2,[r3,#4]
        MOVS     r2,#0
        LDR      r3,|L1.980|
        STRH     r2,[r3,#0]
        LDR      r3,|L1.976|
        STRH     r2,[r3,#0]
        MOVS     r2,#7
        LDR      r3,|L1.972|
        STRB     r2,[r3,#0]
        LDR      r2,|L1.984|
        LDR      r2,[r2,#0]  ; addnum
        MOVS     r3,#5
        UDIV     r2,r2,r3
        LDR      r3,|L1.984|
        LDR      r3,[r3,#0]  ; addnum
        MOVS     r4,#5
        UDIV     r5,r3,r4
        MLS      r3,r4,r5,r3
        ADD      r2,r2,r3,LSR #1
        LDR      r3,|L1.988|
        LDR      r3,[r3,#0]  ; Samp_Databuff
        ADD      r2,r2,r3
        LDR      r3,|L1.988|
        STR      r2,[r3,#0]  ; Samp_Databuff
        MOVS     r2,#0
        LDR      r3,|L1.984|
        STR      r2,[r3,#0]  ; addnum
        B        |L1.314|
|L1.288|
        NOP      
|L1.290|
        MOV      r2,#0x100000
        LDR      r3,|L1.964|
        STR      r2,[r3,#0]
        LDR      r2,|L1.972|
        LDRB     r2,[r2,#0]  ; addcount
        SUBS     r2,r2,#1
        LDR      r3,|L1.972|
        STRB     r2,[r3,#0]
        MOVS     r2,#0
        LDR      r3,|L1.968|
        STRH     r2,[r3,#0xc]
|L1.314|
        POP      {r4,r5,pc}
        ENDP

SPI_Init PROC
        LDR      r0,|L1.992|
        LDR      r0,[r0,#0x18]
        MOV      r1,#0x1005
        ORRS     r0,r0,r1
        LDR      r1,|L1.992|
        STR      r0,[r1,#0x18]
        MOVS     r0,#0x10
        LDR      r1,|L1.964|
        STR      r0,[r1,#0]
        LSLS     r0,r0,#17
        STR      r0,[r1,#0]
        LDR      r0,|L1.964|
        SUBS     r0,r0,#0x10
        LDR      r0,[r0,#0]
        LDR      r1,|L1.996|
        ANDS     r0,r0,r1
        LDR      r1,|L1.964|
        SUBS     r1,r1,#0x10
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        LDR      r1,|L1.1000|
        ORRS     r0,r0,r1
        LDR      r1,|L1.964|
        SUBS     r1,r1,#0x10
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        LDR      r1,|L1.1004|
        ANDS     r0,r0,r1
        LDR      r1,|L1.964|
        SUBS     r1,r1,#0x10
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        LDR      r1,|L1.1008|
        ORRS     r0,r0,r1
        LDR      r1,|L1.964|
        SUBS     r1,r1,#0x10
        STR      r0,[r1,#0]
        LDR      r0,|L1.968|
        LDRH     r0,[r0,#0]
        BIC      r0,r0,#0x38
        LDR      r1,|L1.968|
        STRH     r0,[r1,#0]
        MOV      r0,r1
        LDRH     r0,[r0,#0]
        ORR      r0,r0,#0x10
        STRH     r0,[r1,#0]
        MOV      r0,r1
        LDRH     r0,[r0,#0]
        BIC      r0,r0,#3
        STRH     r0,[r1,#0]
        MOV      r0,r1
        LDRH     r0,[r0,#0]
        STRH     r0,[r1,#0]
        MOV      r0,r1
        LDRH     r0,[r0,#0]
        BIC      r0,r0,#0x800
        STRH     r0,[r1,#0]
        MOV      r0,r1
        LDRH     r0,[r0,#0]
        ORR      r0,r0,#0x800
        STRH     r0,[r1,#0]
        MOV      r0,r1
        LDRH     r0,[r0,#0]
        BIC      r0,r0,#0x80
        STRH     r0,[r1,#0]
        MOV      r0,r1
        LDRH     r0,[r0,#0]
        STRH     r0,[r1,#0]
        MOV      r0,r1
        LDRH     r0,[r0,#0]
        BIC      r0,r0,#0x300
        STRH     r0,[r1,#0]
        MOV      r0,r1
        LDRH     r0,[r0,#0]
        ORR      r0,r0,#0x300
        STRH     r0,[r1,#0]
        MOV      r0,r1
        LDRH     r0,[r0,#0]
        BIC      r0,r0,#0x3d000
        STRH     r0,[r1,#0]
        MOV      r0,r1
        LDRH     r0,[r0,#0]
        STRH     r0,[r1,#0]
        MOVS     r0,#0
        STRH     r0,[r1,#4]
        MOV      r0,r1
        LDRH     r0,[r0,#0]
        ORR      r0,r0,#0x44
        STRH     r0,[r1,#0]
        BX       lr
        ENDP

SPI_TRAN PROC
        MOV      r2,r0
        MOVS     r0,#0x10
        LDR      r3,|L1.964|
        STR      r0,[r3,#0]
        NOP      
        MOV      r0,#0x100000
        LDR      r3,|L1.964|
        STR      r0,[r3,#0]
        NOP      
        LDR      r0,|L1.968|
        LDRH     r1,[r0,#8]
        TST      r1,#0xf0
        BEQ      |L1.616|
        TST      r1,#0x20
        BEQ      |L1.574|
        LDRH     r0,[r0,#0]
        ORR      r0,r0,#0x44
        LDR      r3,|L1.968|
        STRH     r0,[r3,#0]
        MOVS     r0,#1
|L1.572|
        BX       lr
|L1.574|
        TST      r1,#0x40
        BEQ      |L1.588|
        LDR      r0,|L1.968|
        LDRH     r1,[r0,#0xc]
        MOVS     r0,#2
        B        |L1.572|
|L1.588|
        TST      r1,#0x10
        BEQ      |L1.598|
        MOVS     r0,#3
        B        |L1.572|
|L1.598|
        TST      r1,#0x80
        BEQ      |L1.616|
        NOP      
|L1.606|
        LDR      r0,|L1.968|
        LDRH     r0,[r0,#8]
        TST      r0,#0x80
        BNE      |L1.606|
|L1.616|
        AND      r0,r1,#2
        CMP      r0,#2
        BNE      |L1.660|
        LDR      r0,|L1.968|
        STRH     r2,[r0,#0xc]
        NOP      
|L1.630|
        LDR      r0,|L1.968|
        LDRH     r0,[r0,#8]
        AND      r0,r0,#0x83
        CMP      r0,#3
        BNE      |L1.630|
        LDR      r0,|L1.968|
        LDRH     r1,[r0,#0xc]
        NOP      
|L1.648|
        LDR      r0,|L1.968|
        LDRH     r0,[r0,#8]
        AND      r0,r0,#0x83
        CMP      r0,#2
        BNE      |L1.648|
|L1.660|
        MOVS     r0,#0x10
        LDR      r3,|L1.964|
        STR      r0,[r3,#0]
        NOP      
        MOVS     r0,#0
        B        |L1.572|
        ENDP

ADS7953_CHsel PROC
        PUSH     {r4,r5,lr}
        MOV      r5,r0
        MOVS     r4,#0
        LDR      r0,|L1.968|
        LDRH     r0,[r0,#4]
        TST      r0,#0x40
        BEQ      |L1.692|
        MOVS     r0,#4
|L1.690|
        POP      {r4,r5,pc}
|L1.692|
        MOV      r1,#0x1800
        ORR      r1,r1,r5,LSL #7
        UXTH     r1,r1
        ORR      r0,r1,#0x40
        BL       SPI_TRAN
        ORRS     r4,r4,r0
        MOVS     r0,#0
        BL       SPI_TRAN
        ORRS     r4,r4,r0
        MOVS     r0,#0
        BL       SPI_TRAN
        ORRS     r4,r4,r0
        MOVS     r0,#0
        BL       SPI_TRAN
        CBZ      r4,|L1.740|
        MOVS     r0,#5
        B        |L1.690|
|L1.740|
        LDR      r0,|L1.968|
        LDRH     r4,[r0,#8]
        TST      r4,#0x70
        BEQ      |L1.794|
        TST      r4,#0x20
        BEQ      |L1.770|
        LDRH     r0,[r0,#0]
        ORR      r0,r0,#0x44
        LDR      r1,|L1.968|
        STRH     r0,[r1,#0]
        MOVS     r0,#1
        B        |L1.690|
|L1.770|
        TST      r4,#0x40
        BEQ      |L1.784|
        LDR      r0,|L1.968|
        LDRH     r4,[r0,#0xc]
        MOVS     r0,#2
        B        |L1.690|
|L1.784|
        TST      r4,#0x10
        BEQ      |L1.794|
        MOVS     r0,#3
        B        |L1.690|
|L1.794|
        MOVS     r0,#0
        B        |L1.690|
        ENDP

ADS7953_CHflush PROC
        PUSH     {r4,r5,lr}
        MOV      r5,r0
        MOVS     r4,#0
        LDR      r0,|L1.968|
        LDRH     r0,[r0,#4]
        TST      r0,#0x40
        BEQ      |L1.818|
        MOVS     r0,#4
|L1.816|
        POP      {r4,r5,pc}
|L1.818|
        B        |L1.832|
|L1.820|
        MOVS     r0,#0
        BL       SPI_TRAN
        ORRS     r4,r4,r0
        SUBS     r0,r5,#1
        UXTB     r5,r0
|L1.832|
        CMP      r5,#0
        BNE      |L1.820|
        CBZ      r4,|L1.842|
        MOVS     r0,#5
        B        |L1.816|
|L1.842|
        LDR      r0,|L1.968|
        LDRH     r4,[r0,#8]
        TST      r4,#0x70
        BEQ      |L1.896|
        TST      r4,#0x20
        BEQ      |L1.872|
        LDRH     r0,[r0,#0]
        ORR      r0,r0,#0x44
        LDR      r1,|L1.968|
        STRH     r0,[r1,#0]
        MOVS     r0,#1
        B        |L1.816|
|L1.872|
        TST      r4,#0x40
        BEQ      |L1.886|
        LDR      r0,|L1.968|
        LDRH     r4,[r0,#0xc]
        MOVS     r0,#2
        B        |L1.816|
|L1.886|
        TST      r4,#0x10
        BEQ      |L1.896|
        MOVS     r0,#3
        B        |L1.816|
|L1.896|
        MOVS     r0,#0
        B        |L1.816|
        ENDP

ADS7953_SMstart PROC
        LDR      r0,|L1.968|
        LDRH     r0,[r0,#4]
        ORR      r0,r0,#0x40
        LDR      r1,|L1.968|
        STRH     r0,[r1,#4]
        MOVS     r0,#0x10
        LDR      r1,|L1.964|
        STR      r0,[r1,#0]
        NOP      
        MOV      r0,#0x100000
        LDR      r1,|L1.964|
        STR      r0,[r1,#0]
        NOP      
        MOVS     r0,#0
        LDR      r1,|L1.968|
        STRH     r0,[r1,#0xc]
        BX       lr
        ENDP

ADS7953_Init PROC
        PUSH     {lr}
        BL       SPI_Init
        LDR      r1,|L1.1012|
        LDRB     r1,[r1,#1]  ; Samp_ADdata_Stream
        LDR      r2,|L1.1016|
        ADD      r1,r2,r1,LSL #4
        LDRH     r0,[r1,#2]
        BL       ADS7953_CHsel
        POP      {pc}
        ENDP

        DCW      0x0000
|L1.964|
        DCD      0x40010810
|L1.968|
        DCD      0x40013000
|L1.972|
        DCD      addcount
|L1.976|
        DCD      min
|L1.980|
        DCD      max
|L1.984|
        DCD      addnum
|L1.988|
        DCD      Samp_Databuff
|L1.992|
        DCD      0x40021000
|L1.996|
        DCD      0xccccffff
|L1.1000|
        DCD      0x30330000
|L1.1004|
        DCD      0x3333ffff
|L1.1008|
        DCD      0x84800000
|L1.1012|
        DCD      Samp_ADdata_Stream
|L1.1016|
        DCD      Samp_DataArr

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

addcount
        DCB      0x07,0x00
max
        DCB      0x00,0x00
min
        DCB      0x00,0x00,0x00,0x00
addnum
        DCD      0x00000000
Samp_Databuff
        DCD      0x00000000

        EXPORT SPI1_IRQHandler [CODE]
        EXPORT SPI_Init [CODE]
        EXPORT SPI_TRAN [CODE]
        EXPORT ADS7953_CHsel [CODE]
        EXPORT ADS7953_CHflush [CODE]
        EXPORT ADS7953_SMstart [CODE]
        EXPORT ADS7953_Init [CODE]
        EXPORT Samp_Databuff [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT Samp_ADdata_Stream [DATA]
        IMPORT Samp_DataArr [DATA]

        KEEP addcount
        KEEP max
        KEEP min
        KEEP addnum

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
