#ifndef __UART_H_
#define __UART_H_

#include "stm32f10x.h"
#include "Self_Modbus.h"
#include "MyTypedef.h"

#define UP485_RXEN (GPIOA->BSRR = GPIO_BSRR_BR8)
#define UP485_TXEN (GPIOA->BSRR = GPIO_BSRR_BS8)
#define UART1_TXDISEN (USART1->CR1 &= ~USART_CR1_TE)
#define UART1_TXEN (USART1->CR1 |= USART_CR1_TE)
#define UART1_TXEIEDISEN (USART1->CR1 &= ~USART_CR1_TXEIE)
#define UART1_TXEIEEN (USART1->CR1 |= USART_CR1_TXEIE)
#define UART1_TCIEDISEN (USART1->CR1 &= ~USART_CR1_TCIE)
#define UART1_TCIEEN (USART1->CR1 |= USART_CR1_TCIE)

#define UART1_RXDISEN (USART1->CR1 &= ~USART_CR1_RE)
#define UART1_RXEN (USART1->CR1 |= USART_CR1_RE)

#define U1_FRAME_START0 0xF0
#define U1_FRAME_START1 0xE1
#define U1_FRAME_START2 0xD2
#define U1_FRAME_START3 0xC3

#define U1_FRAME_ADD 0x05

#define U1_FRAME_LENDATA SELFMB_PDULEN_BYTECOUNT
#define U1_FRAME_ADDDATA 1
#define U1_FRAME_FUNDATA SELFMB_PDULEN_FUNCODE
#define U1_FRAME_STARTDATA 4
#define U1_FRAME_CRCDATA 2
#define U1_FRAME_TXDATA SELFMB_READHOLDREG_BYTEREGLENMAX//Modbus正常应答帧PDU中数据最长长度
#define U1_FRAME_RXDATA SELFMB_WRITMULREG_BYTEREGLENMAX//Modbus正常请求帧PDU中数据最长长度

//接收和发送FIFO头部分，包括起始字节、地址字节
#define U1_FRAME_SENDHEADLEN (U1_FRAME_STARTDATA+U1_FRAME_ADDDATA)
#define U1_FRAME_RECEHEADLEN (U1_FRAME_STARTDATA+U1_FRAME_ADDDATA)
//接收和发送FIFO数据部分，为Modbus PDU
#define U1_FRAME_SENDDATALEN (SELFMB_READHOLDREG_PDURESLEN+U1_FRAME_TXDATA + U1_FRAME_CRCDATA)
#define U1_FRAME_RECEDATALEN (SELFMB_WRITMULREG_PDUREQLEN + U1_FRAME_RXDATA +U1_FRAME_CRCDATA)

#define U1_RXFIFOMDINDEX_FUNCODE 0
#define U1_RXFIFOMDINDEX_STARTADDR SELFMB_PDULEN_FUNCODE
#define U1_RXFIFOMDINDEX_QUANTITYOFREG (SELFMB_PDULEN_FUNCODE+SELFMB_PDULEN_STARTADDR)
#define U1_RXFIFOMDINDEX_BYTECOUNT (SELFMB_PDULEN_FUNCODE+SELFMB_PDULEN_STARTADDR+SELFMB_PDULEN_QUANTITYOFREG)

#define U1_TXFIFOMDINDEX_FUNCODE 0
#define U1_TXFIFOMDINDEX_STARTADDR SELFMB_PDULEN_FUNCODE
#define U1_TXFIFOMDINDEX_QUANTITYOFREG (SELFMB_PDULEN_FUNCODE+SELFMB_PDULEN_STARTADDR)
#define U1_TXFIFOMDINDEX_BYTECOUNT SELFMB_PDULEN_FUNCODE
#define U1_TXFIFOMDINDEX_EXCEPFUNCODE SELFMB_PDULEN_FUNCODE

//接收FIFO数据段所有数据偏移定义参考Modbus 协议Write Multiple Registers 功能请求帧结构
#define U1_RXFIFOINDEX_CMD (0x0000)//主机发送的命令字节在接收帧中的偏移地址
#define U1_RXFIFOINDEX_CMDLEN 2 //主机发送的命令半字长度

#define U1_RXFIFOINDEX_LIMIT (0x0002)//主机发送的数据限度字节在接收帧中的偏移地址
#define U1_RXFIFOINDEX_LIMITLEN 13//主机发送的数据限度半字长度

#define U1_RXFIFOINDEX_CAL (0x000F)//主机发送的校准字节在接收帧中的偏移地址
#define U1_RXFIFOINDEX_CALLEN 3//主机发送的校准半字长度

#define U1_RXFIFOINDEX_ADDR (0x0012)//主机发送的设置地址字节在接收帧中的偏移地址
#define U1_RXFIFOINDEX_ADDRLEN 1//主机发送的设置地址半字长度


typedef struct
{
    uint8_t Txfifohead[U1_FRAME_SENDHEADLEN];
    uint8_t Txfifodata[U1_FRAME_SENDDATALEN];
}Stu_U1TXFIFO;

typedef struct
{
    uint8_t Rxfifohead[U1_FRAME_RECEHEADLEN];
    uint8_t Rxfifodata[U1_FRAME_RECEDATALEN];
}Stu_U1RXFIFO;

typedef union
{
    Stu_U1TXFIFO TxBuff;
    Stu_U1RXFIFO RxBuff;
    uint8_t FIFO[U1_FRAME_RECEHEADLEN+U1_FRAME_RECEDATALEN];
}Un_U1FIFOBuff;

typedef union
{
    uint16_t Rec_len;
    uint16_t Tran_len;
}Un_U1TRANSFLEN;

extern uint8_t U1_RXfin;
extern uint8_t U1_TXfin;
extern Un_U1FIFOBuff U1_FIFOBuff;
extern Un_U1TRANSFLEN U1_RxTxLen;

__irq void USART1_IRQHandler(void);
void USART1_Send(void);
void UART_Init(void);


#endif

