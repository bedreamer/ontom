; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--debug -c --asm -o..\Output\can.o --depend=..\Output\can.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\src -I.\inc -I..\CMSIS -I"E:\Keil 4 ARM\ARM\RV31\Inc" -I"E:\Keil 4 ARM\ARM\CMSIS\Include" -I"E:\Keil 4 ARM\ARM\Inc\ST\STM32F10x" -DSTM32F10X_MD --omf_browse=..\Output\can.crf src\CAN.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

USB_HP_CAN1_TX_IRQHandler PROC
        LDR      r0,|L1.976|
        LDR      r0,[r0,#0]
        TST      r0,#2
        BEQ      |L1.140|
        MOVS     r1,#8
        LDR      r0,|L1.980|
        STR      r1,[r0,#0]
        LDR      r1,|L1.984|
        ADD      r0,r0,#4
        STR      r1,[r0,#0]
        LDR      r1,|L1.988|
        ADD      r0,r0,#4
        STR      r1,[r0,#0]
        LDR      r0,|L1.992|
        LDR      r0,[r0,#0]  ; id
        MOV      r1,#4
        ADD      r0,r1,r0,LSL #3
        ADD      r0,r0,#1
        LDR      r1,|L1.996|
        STR      r0,[r1,#0]
        LDR      r0,|L1.992|
        LDR      r0,[r0,#0]  ; id
        CMP      r0,#2
        BNE      |L1.98|
        LDR      r0,|L1.1000|
        LDR      r1,[r0,#0]  ; TX_cont0
        LDR      r0,[r0,#0]  ; TX_cont0
        ADDS     r0,r0,#1
        LDR      r2,|L1.1000|
        STR      r0,[r2,#0]  ; TX_cont0
        CMP      r1,#0x64
        BCC      |L1.140|
        MOVS     r0,#0
        MOV      r1,r2
        STR      r0,[r1,#0]  ; TX_cont0
        MOVS     r0,#3
        LDR      r1,|L1.992|
        STR      r0,[r1,#0]  ; id
        MOV      r0,#0x2000
        LDR      r1,|L1.1004|
        STR      r0,[r1,#0x10]
        B        |L1.140|
|L1.98|
        LDR      r0,|L1.992|
        LDR      r0,[r0,#0]  ; id
        CMP      r0,#3
        BNE      |L1.140|
        LDR      r0,|L1.1008|
        LDR      r1,[r0,#0]  ; TX_cont1
        LDR      r0,[r0,#0]  ; TX_cont1
        ADDS     r0,r0,#1
        LDR      r2,|L1.1008|
        STR      r0,[r2,#0]  ; TX_cont1
        CMP      r1,#0x64
        BCC      |L1.140|
        MOVS     r0,#0
        MOV      r1,r2
        STR      r0,[r1,#0]  ; TX_cont1
        MOVS     r0,#2
        LDR      r1,|L1.992|
        STR      r0,[r1,#0]  ; id
        LSLS     r0,r0,#28
        LDR      r1,|L1.1004|
        STR      r0,[r1,#0x10]
|L1.140|
        BX       lr
        ENDP

USB_LP_CAN1_RX0_IRQHandler PROC
        LDR      r0,|L1.976|
        ADDS     r0,r0,#4
        LDR      r0,[r0,#0]
        TST      r0,#3
        BEQ      |L1.204|
        LDR      r0,|L1.976|
        ADDS     r0,r0,#4
        LDR      r0,[r0,#0]
        EOR      r0,r0,#0x20
        LDR      r1,|L1.976|
        ADDS     r1,r1,#4
        STR      r0,[r1,#0]
        LDR      r0,|L1.1012|
        LDRB     r1,[r0,#0]  ; cont
        LDRB     r0,[r0,#0]  ; cont
        ADDS     r0,r0,#1
        LDR      r2,|L1.1012|
        STRB     r0,[r2,#0]
        CMP      r1,#0x64
        BLT      |L1.204|
        LDR      r0,|L1.1004|
        LDR      r0,[r0,#0xc]
        EOR      r0,r0,#0x2000
        LDR      r1,|L1.1004|
        STR      r0,[r1,#0xc]
        MOVS     r0,#0
        MOV      r1,r2
        STRB     r0,[r1,#0]
|L1.204|
        BX       lr
        ENDP

CAN1_RX1_IRQHandler PROC
        LDR      r0,|L1.976|
        ADDS     r0,r0,#8
        LDR      r0,[r0,#0]
        TST      r0,#3
        BEQ      |L1.320|
        LDR      r0,|L1.1016|
        LDR      r0,[r0,#0]
        TST      r0,#0xff00
        BNE      |L1.240|
        LDR      r0,|L1.1020|
        LDRB     r0,[r0,#0]  ; cont0
        ADDS     r0,r0,#1
        LDR      r1,|L1.1020|
        STRB     r0,[r1,#0]
        B        |L1.264|
|L1.240|
        LDR      r0,|L1.1016|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0xff00
        CMP      r0,#0x100
        BNE      |L1.264|
        LDR      r0,|L1.1024|
        LDRB     r0,[r0,#0]  ; cont1
        ADDS     r0,r0,#1
        LDR      r1,|L1.1024|
        STRB     r0,[r1,#0]
|L1.264|
        LDR      r0,|L1.976|
        ADDS     r0,r0,#8
        LDR      r0,[r0,#0]
        EOR      r0,r0,#0x20
        LDR      r1,|L1.976|
        ADDS     r1,r1,#8
        STR      r0,[r1,#0]
        LDR      r0,|L1.1028|
        LDRB     r1,[r0,#0]  ; cont
        LDRB     r0,[r0,#0]  ; cont
        ADDS     r0,r0,#1
        LDR      r2,|L1.1028|
        STRB     r0,[r2,#0]
        CMP      r1,#0x64
        BLT      |L1.314|
        LDR      r0,|L1.1004|
        LDR      r0,[r0,#0xc]
        EOR      r0,r0,#0x4000
        LDR      r1,|L1.1004|
        STR      r0,[r1,#0xc]
        MOVS     r0,#0
        MOV      r1,r2
        STRB     r0,[r1,#0]
|L1.314|
        MOVS     r0,#1
        LDR      r1,|L1.1032|
        STRB     r0,[r1,#0]
|L1.320|
        BX       lr
        ENDP

CAN_Send PROC
        LDR      r0,|L1.996|
        LDR      r0,[r0,#0]
        TST      r0,#1
        BNE      |L1.478|
        MOVS     r1,#8
        LDR      r0,|L1.980|
        STR      r1,[r0,#0]
        LDR      r1,|L1.984|
        ADD      r0,r0,#4
        STR      r1,[r0,#0]
        LDR      r1,|L1.988|
        ADD      r0,r0,#4
        STR      r1,[r0,#0]
        LDR      r0,|L1.992|
        LDR      r0,[r0,#0]  ; id
        MOV      r1,#4
        ADD      r0,r1,r0,LSL #3
        ADD      r0,r0,#1
        LDR      r1,|L1.996|
        STR      r0,[r1,#0]
        LDR      r0,|L1.992|
        LDR      r0,[r0,#0]  ; id
        CMP      r0,#2
        BNE      |L1.418|
        LDR      r0,|L1.1000|
        LDR      r1,[r0,#0]  ; TX_cont0
        LDR      r0,[r0,#0]  ; TX_cont0
        ADDS     r0,r0,#1
        LDR      r2,|L1.1000|
        STR      r0,[r2,#0]  ; TX_cont0
        CMP      r1,#0x64
        BCC      |L1.460|
        MOVS     r0,#0
        MOV      r1,r2
        STR      r0,[r1,#0]  ; TX_cont0
        MOVS     r0,#2
        LDR      r1,|L1.992|
        STR      r0,[r1,#0]  ; id
        LSLS     r0,r0,#12
        LDR      r1,|L1.1004|
        STR      r0,[r1,#0x10]
        B        |L1.460|
|L1.418|
        LDR      r0,|L1.992|
        LDR      r0,[r0,#0]  ; id
        CMP      r0,#3
        BNE      |L1.460|
        LDR      r0,|L1.1008|
        LDR      r1,[r0,#0]  ; TX_cont1
        LDR      r0,[r0,#0]  ; TX_cont1
        ADDS     r0,r0,#1
        LDR      r2,|L1.1008|
        STR      r0,[r2,#0]  ; TX_cont1
        CMP      r1,#0x64
        BCC      |L1.460|
        MOVS     r0,#0
        MOV      r1,r2
        STR      r0,[r1,#0]  ; TX_cont1
        MOVS     r0,#2
        LDR      r1,|L1.992|
        STR      r0,[r1,#0]  ; id
        LSLS     r0,r0,#28
        LDR      r1,|L1.1004|
        STR      r0,[r1,#0x10]
|L1.460|
        NOP      
|L1.462|
        LDR      r0,|L1.976|
        LDR      r0,[r0,#0]
        TST      r0,#2
        BEQ      |L1.462|
        MOVS     r0,#0
        LDR      r1,|L1.1032|
        STRB     r0,[r1,#0]
|L1.478|
        BX       lr
        ENDP

CAN_Rece PROC
        LDR      r0,|L1.976|
        ADDS     r0,r0,#4
        LDR      r0,[r0,#0]
        TST      r0,#3
        BEQ      |L1.578|
        LDR      r0,|L1.1036|
        LDR      r1,[r0,#0]
        SUB      r0,r0,#4
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#8,#8
        LDR      r2,|L1.1040|
        STR      r1,[r2,r0,LSL #3]
        LDR      r0,|L1.1044|
        LDR      r1,[r0,#0]
        LDR      r0,|L1.1048|
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#8,#8
        ADD      r0,r2,r0,LSL #3
        STR      r1,[r0,#4]
        LDR      r0,|L1.1052|
        LDR      r0,[r0,#0]
        EOR      r0,r0,#0x20
        LDR      r1,|L1.1052|
        STR      r0,[r1,#0]
        LDR      r0,|L1.1056|
        LDRB     r1,[r0,#0]  ; cont
        LDRB     r0,[r0,#0]  ; cont
        ADD      r0,r0,#1
        LDR      r2,|L1.1056|
        STRB     r0,[r2,#0]
        CMP      r1,#0x64
        BLT      |L1.578|
        LDR      r0,|L1.1004|
        LDR      r0,[r0,#0xc]
        EOR      r0,r0,#0x2000
        LDR      r1,|L1.1004|
        STR      r0,[r1,#0xc]
        MOVS     r0,#0
        MOV      r1,r2
        STRB     r0,[r1,#0]
|L1.578|
        LDR      r0,|L1.1052|
        ADDS     r0,r0,#4
        LDR      r0,[r0,#0]
        TST      r0,#3
        BEQ      |L1.638|
        LDR      r0,|L1.1060|
        LDR      r1,[r0,#0]
        LDR      r0,|L1.1016|
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#8,#8
        LDR      r2,|L1.1064|
        STR      r1,[r2,r0,LSL #3]
        LDR      r0,|L1.1068|
        LDR      r1,[r0,#0]
        LDR      r0,|L1.1016|
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#8,#8
        ADD      r0,r2,r0,LSL #3
        STR      r1,[r0,#4]
        LDR      r0,|L1.1072|
        LDR      r0,[r0,#0]
        EOR      r0,r0,#0x20
        LDR      r1,|L1.1072|
        STR      r0,[r1,#0]
|L1.638|
        BX       lr
        ENDP

CAN_Init PROC
        LDR      r0,|L1.1076|
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x2000000
        LDR      r1,|L1.1076|
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#5
        STR      r0,[r1,#0x18]
        LDR      r0,|L1.1080|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x33000
        LDR      r1,|L1.1080|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x30000
        STR      r0,[r1,#0]
        ASRS     r0,r1,#19
        LDR      r1,|L1.1080|
        ADDS     r1,r1,#0xc
        STR      r0,[r1,#0]
        LDR      r0,|L1.1080|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0xcc000
        LDR      r1,|L1.1080|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x88000
        STR      r0,[r1,#0]
        LDR      r0,|L1.976|
        SUBS     r0,r0,#8
        LDR      r0,[r0,#0]
        EOR      r0,r0,#3
        LDR      r1,|L1.976|
        SUBS     r1,r1,#8
        STR      r0,[r1,#0]
        NOP      
|L1.732|
        LDR      r0,|L1.976|
        SUBS     r0,r0,#4
        LDR      r0,[r0,#0]
        AND      r0,r0,#3
        CMP      r0,#1
        BNE      |L1.732|
        LDR      r0,|L1.976|
        SUBS     r0,r0,#8
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x64
        LDR      r1,|L1.976|
        SUBS     r1,r1,#8
        STR      r0,[r1,#0]
        LDR      r0,|L1.1084|
        LDR      r1,|L1.1072|
        ADDS     r1,r1,#0xc
        STR      r0,[r1,#0]
        LDR      r0,|L1.1072|
        ADDS     r0,r0,#4
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x12
        LDR      r1,|L1.1072|
        ADDS     r1,r1,#4
        STR      r0,[r1,#0]
        LDR      r0,|L1.1068|
        ADDS     r0,r0,#0x34
        LDR      r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r1,|L1.1068|
        ADDS     r1,r1,#0x34
        STR      r0,[r1,#0]
        LDR      r0,|L1.1068|
        ADDS     r0,r0,#0x50
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#0,#14
        LDR      r1,|L1.1068|
        ADDS     r1,r1,#0x50
        STR      r0,[r1,#0]
        LDR      r0,|L1.1068|
        ADDS     r0,r0,#0x40
        LDR      r0,[r0,#0]
        ORR      r0,r0,#3
        LDR      r1,|L1.1068|
        ADDS     r1,r1,#0x40
        STR      r0,[r1,#0]
        LDR      r0,|L1.1068|
        ADDS     r0,r0,#0x38
        LDR      r0,[r0,#0]
        ORR      r0,r0,#3
        LDR      r1,|L1.1068|
        ADDS     r1,r1,#0x38
        STR      r0,[r1,#0]
        MOVS     r0,#0
        LDR      r1,|L1.1068|
        ADDS     r1,r1,#0x74
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        ORR      r0,r0,#4
        STR      r0,[r1,#0]
        MOVS     r1,#0
        LDR      r0,|L1.1088|
        STR      r1,[r0,#0]
        LDR      r0,[r0,#0]
        ORR      r1,r0,#0xc
        LDR      r0,|L1.1088|
        STR      r1,[r0,#0]
        MOV      r1,#0
        ADD      r0,r0,#4
        STR      r1,[r0,#0]
        LDR      r0,[r0,#0]
        ORR      r1,r0,#0x14
        LDR      r0,|L1.1092|
        STR      r1,[r0,#0]
        MOV      r1,#0
        ADD      r0,r0,#4
        STR      r1,[r0,#0]
        LDR      r0,[r0,#0]
        ORR      r1,r0,#0x1c
        LDR      r0,|L1.1096|
        STR      r1,[r0,#0]
        LDR      r0,|L1.1100|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#2
        LDR      r1,|L1.1100|
        STR      r0,[r1,#0]
        LDR      r0,|L1.1104|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#3
        LDR      r1,|L1.1104|
        STR      r0,[r1,#0]
        LDR      r0,|L1.1108|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,|L1.1108|
        STR      r0,[r1,#0]
        LDR      r0,|L1.1112|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L1.976|
        DCD      0x40006408
|L1.980|
        DCD      0x40006584
|L1.984|
        DCD      0x03020100
|L1.988|
        DCD      0x07060504
|L1.992|
        DCD      ||id||
|L1.996|
        DCD      0x40006580
|L1.1000|
        DCD      TX_cont0
|L1.1004|
        DCD      0x40011000
|L1.1008|
        DCD      TX_cont1
|L1.1012|
        DCD      cont
|L1.1016|
        DCD      0x400065c4
|L1.1020|
        DCD      cont0
|L1.1024|
        DCD      cont1
|L1.1028|
        DCD      |symbol_number.9|
|L1.1032|
        DCD      flag
|L1.1036|
        DCD      0x400065b8
|L1.1040|
        DCD      fifo0
|L1.1044|
        DCD      0x400065bc
|L1.1048|
        DCD      0x400065b4
|L1.1052|
        DCD      0x4000640c
|L1.1056|
        DCD      |symbol_number.10|
|L1.1060|
        DCD      0x400065c8
|L1.1064|
        DCD      fifo1
|L1.1068|
        DCD      0x400065cc
|L1.1072|
        DCD      0x40006410
|L1.1076|
        DCD      0x40021000
|L1.1080|
        DCD      0x40010804
|L1.1084|
        DCD      0x01580011
|L1.1088|
        DCD      0x40006644
|L1.1092|
        DCD      0x40006648
|L1.1096|
        DCD      0x4000664c
|L1.1100|
        DCD      0x40006614
|L1.1104|
        DCD      0x4000661c
|L1.1108|
        DCD      0x40006600
|L1.1112|
        DCD      0x40006400

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=0

fifo0
        %        16
fifo1
        %        16

        AREA ||.data||, DATA, ALIGN=2

flag
        DCB      0x01,0x00,0x00,0x00
||id||
        DCD      0x00000002
cont
        DCB      0x00
|symbol_number.9|
        DCB      0x00
|symbol_number.10|
        DCB      0x00
cont0
        DCB      0x00
cont1
        DCB      0x00,0x00,0x00,0x00
TX_cont0
        DCD      0x00000000
TX_cont1
        DCD      0x00000000

        EXPORT USB_HP_CAN1_TX_IRQHandler [CODE]
        EXPORT USB_LP_CAN1_RX0_IRQHandler [CODE]
        EXPORT CAN1_RX1_IRQHandler [CODE]
        EXPORT CAN_Send [CODE]
        EXPORT CAN_Rece [CODE]
        EXPORT CAN_Init [CODE]
        EXPORT fifo0 [DATA,SIZE=16]
        EXPORT fifo1 [DATA,SIZE=16]
        EXPORT flag [DATA,SIZE=1]
        EXPORT ||id|| [DATA,SIZE=4]
        EXPORT cont0 [DATA,SIZE=1]
        EXPORT cont1 [DATA,SIZE=1]
        EXPORT TX_cont0 [DATA,SIZE=4]
        EXPORT TX_cont1 [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        KEEP cont
        KEEP |symbol_number.9|
        EXPORTAS |symbol_number.9|, cont
        KEEP |symbol_number.10|
        EXPORTAS |symbol_number.10|, cont

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
