; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--debug -c --asm -o..\Output\crc.o --depend=..\Output\crc.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\src -I.\inc -I..\CMSIS -I"E:\Keil 4 ARM\ARM\RV31\Inc" -I"E:\Keil 4 ARM\ARM\CMSIS\Include" -I"E:\Keil 4 ARM\ARM\Inc\ST\STM32F10x" -DSTM32F10X_CL --omf_browse=..\Output\crc.crf src\CRC.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

CRC16_CAL PROC
        PUSH     {r4-r6,lr}
        MOV      r2,r0
        MOV      r4,r1
        MOVS     r5,#0xff
        MOVS     r3,#0xff
        B        |L1.32|
|L1.12|
        LDRB     r0,[r2],#1
        EOR      r1,r0,r3
        LDR      r0,|L1.116|
        LDRB     r0,[r0,r1]
        EOR      r3,r0,r5
        LDR      r0,|L1.120|
        LDRB     r5,[r0,r1]
|L1.32|
        MOVS     r0,r4
        SUB      r6,r4,#1
        UXTB     r4,r6
        BNE      |L1.12|
        EOR      r0,r3,r5,LSL #8
        POP      {r4-r6,pc}
        ENDP

CRC16_BigendianCAL PROC
        PUSH     {r4-r7,lr}
        MOV      r3,r0
        MOV      r4,r2
        ASRS     r5,r1,#8
        UXTB     r2,r1
        MOVS     r7,#0
        B        |L1.98|
|L1.62|
        CBNZ     r7,|L1.74|
        LDRB     r0,[r3,#1]
        EOR      r6,r0,r2
        MOVS     r7,#1
        B        |L1.86|
|L1.74|
        LDRB     r0,[r3],#1
        EOR      r6,r0,r2
        ADDS     r3,r3,#1
        MOVS     r7,#0
|L1.86|
        LDR      r0,|L1.116|
        LDRB     r0,[r0,r6]
        EOR      r2,r0,r5
        LDR      r0,|L1.120|
        LDRB     r5,[r0,r6]
|L1.98|
        MOVS     r0,r4
        SUB      r12,r4,#1
        AND      r4,r12,#0xff
        BNE      |L1.62|
        EOR      r0,r2,r5,LSL #8
        POP      {r4-r7,pc}
        ENDP

|L1.116|
        DCD      chCRCHTalbe
|L1.120|
        DCD      chCRCLTalbe

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=0

chCRCHTalbe
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x01,0xc0,0x80,0x41
        DCB      0x00,0xc1,0x81,0x40
chCRCLTalbe
        DCB      0x00,0xc0,0xc1,0x01
        DCB      0xc3,0x03,0x02,0xc2
        DCB      0xc6,0x06,0x07,0xc7
        DCB      0x05,0xc5,0xc4,0x04
        DCB      0xcc,0x0c,0x0d,0xcd
        DCB      0x0f,0xcf,0xce,0x0e
        DCB      0x0a,0xca,0xcb,0x0b
        DCB      0xc9,0x09,0x08,0xc8
        DCB      0xd8,0x18,0x19,0xd9
        DCB      0x1b,0xdb,0xda,0x1a
        DCB      0x1e,0xde,0xdf,0x1f
        DCB      0xdd,0x1d,0x1c,0xdc
        DCB      0x14,0xd4,0xd5,0x15
        DCB      0xd7,0x17,0x16,0xd6
        DCB      0xd2,0x12,0x13,0xd3
        DCB      0x11,0xd1,0xd0,0x10
        DCB      0xf0,0x30,0x31,0xf1
        DCB      0x33,0xf3,0xf2,0x32
        DCB      0x36,0xf6,0xf7,0x37
        DCB      0xf5,0x35,0x34,0xf4
        DCB      0x3c,0xfc,0xfd,0x3d
        DCB      0xff,0x3f,0x3e,0xfe
        DCB      0xfa,0x3a,0x3b,0xfb
        DCB      0x39,0xf9,0xf8,0x38
        DCB      0x28,0xe8,0xe9,0x29
        DCB      0xeb,0x2b,0x2a,0xea
        DCB      0xee,0x2e,0x2f,0xef
        DCB      0x2d,0xed,0xec,0x2c
        DCB      0xe4,0x24,0x25,0xe5
        DCB      0x27,0xe7,0xe6,0x26
        DCB      0x22,0xe2,0xe3,0x23
        DCB      0xe1,0x21,0x20,0xe0
        DCB      0xa0,0x60,0x61,0xa1
        DCB      0x63,0xa3,0xa2,0x62
        DCB      0x66,0xa6,0xa7,0x67
        DCB      0xa5,0x65,0x64,0xa4
        DCB      0x6c,0xac,0xad,0x6d
        DCB      0xaf,0x6f,0x6e,0xae
        DCB      0xaa,0x6a,0x6b,0xab
        DCB      0x69,0xa9,0xa8,0x68
        DCB      0x78,0xb8,0xb9,0x79
        DCB      0xbb,0x7b,0x7a,0xba
        DCB      0xbe,0x7e,0x7f,0xbf
        DCB      0x7d,0xbd,0xbc,0x7c
        DCB      0xb4,0x74,0x75,0xb5
        DCB      0x77,0xb7,0xb6,0x76
        DCB      0x72,0xb2,0xb3,0x73
        DCB      0xb1,0x71,0x70,0xb0
        DCB      0x50,0x90,0x91,0x51
        DCB      0x93,0x53,0x52,0x92
        DCB      0x96,0x56,0x57,0x97
        DCB      0x55,0x95,0x94,0x54
        DCB      0x9c,0x5c,0x5d,0x9d
        DCB      0x5f,0x9f,0x9e,0x5e
        DCB      0x5a,0x9a,0x9b,0x5b
        DCB      0x99,0x59,0x58,0x98
        DCB      0x88,0x48,0x49,0x89
        DCB      0x4b,0x8b,0x8a,0x4a
        DCB      0x4e,0x8e,0x8f,0x4f
        DCB      0x8d,0x4d,0x4c,0x8c
        DCB      0x44,0x84,0x85,0x45
        DCB      0x87,0x47,0x46,0x86
        DCB      0x82,0x42,0x43,0x83
        DCB      0x41,0x81,0x80,0x40

        EXPORT CRC16_CAL [CODE]
        EXPORT CRC16_BigendianCAL [CODE]
        EXPORT chCRCHTalbe [DATA,SIZE=256]
        EXPORT chCRCLTalbe [DATA,SIZE=256]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
