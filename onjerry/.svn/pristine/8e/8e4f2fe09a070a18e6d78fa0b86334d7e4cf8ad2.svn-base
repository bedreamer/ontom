; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--debug -c --asm -o..\Output\ad_sample.o --depend=..\Output\ad_sample.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\src -I.\inc -I..\CMSIS -I"E:\Keil 4 ARM\ARM\RV31\Inc" -I"E:\Keil 4 ARM\ARM\CMSIS\Include" -I"E:\Keil 4 ARM\ARM\Inc\ST\STM32F10x" -DSTM32F10X_CL --omf_browse=..\Output\ad_sample.crf src\AD_Sample.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

HUMI_SampData_fun PROC
        MOV      r2,r0
        MOVS     r0,#0
        BX       lr
        ENDP

TEMP_SampData_fun PROC
        MOV      r2,r0
        MOVS     r0,#0
        BX       lr
        ENDP

BATI_SampData_fun PROC
        PUSH     {r4-r10,lr}
        MOV      r4,r0
        MOV      r7,r1
        MOVS     r6,#0
        LDRB     r8,[r7,#1]
        LDR      r0,|L1.1044|
        ADD      r0,r0,r8,LSL #4
        LDRH     r5,[r0,#4]
        LDR      r0,|L1.1044|
        ADD      r0,r0,r8,LSL #4
        LDRH     r0,[r0,#6]
        LDR      r1,|L1.1048|
        MUL      r9,r0,r1
        CMP      r5,#0x5000
        BLS      |L1.60|
        SUB      r5,r5,#0x5000
        B        |L1.68|
|L1.60|
        RSB      r5,r5,#0x5000
        ORR      r6,r6,#8
|L1.68|
        LDRB     r3,[r7,#0x11]
        LDR      r0,|L1.1044|
        ADD      r0,r0,r8,LSL #4
        LDRB     r1,[r0,#0xa]
        UXTH     r0,r5
        LDR      r2,[r7,#0xc]
        BL       Cal_Val_Get
        MOV      r5,r0
        CMP      r5,r9
        BLS      |L1.96|
        ORR      r6,r6,#1
|L1.96|
        LDR      r0,|L1.1048|
        UDIV     r0,r5,r0
        LDR      r1,|L1.1048|
        UDIV     r2,r5,r1
        MLS      r1,r1,r2,r5
        MOV      r2,#0xc350
        UDIV     r1,r1,r2
        ADDS     r5,r0,r1
        TST      r6,#8
        BEQ      |L1.136|
        ORR      r5,r5,#0x8000
        AND      r6,r6,#0xf7
|L1.136|
        CMP      r8,#3
        BEQ      |L1.150|
        CMP      r8,#6
        BNE      |L1.190|
        B        |L1.170|
|L1.150|
        LDRB     r0,[r4,#0x1e]
        BIC      r0,r0,#0x20
        STRB     r0,[r4,#0x1e]
        LDRB     r0,[r4,#0x1e]
        ORR      r0,r0,r6,LSL #5
        STRB     r0,[r4,#0x1e]
        STRH     r5,[r4,#8]
        B        |L1.192|
|L1.170|
        LDRB     r0,[r4,#0x1e]
        BIC      r0,r0,#0x20
        STRB     r0,[r4,#0x1e]
        LDRB     r0,[r4,#0x1e]
        ORR      r0,r0,r6,LSL #5
        STRB     r0,[r4,#0x1e]
        STRH     r5,[r4,#0xa]
        B        |L1.192|
|L1.190|
        NOP      
|L1.192|
        NOP      
        MOVS     r0,#0
        POP      {r4-r10,pc}
        ENDP

MXU_SampData_fun PROC
        PUSH     {r4-r10,lr}
        MOV      r4,r0
        MOV      r8,r1
        MOVS     r6,#0
        LDRB     r7,[r8,#1]
        LDR      r0,|L1.1044|
        ADD      r0,r0,r7,LSL #4
        LDRH     r5,[r0,#4]
        LDR      r0,|L1.1044|
        ADD      r0,r0,r7,LSL #4
        LDRH     r0,[r0,#8]
        LDR      r1,|L1.1048|
        MUL      r9,r0,r1
        LDR      r0,|L1.1044|
        ADD      r0,r0,r7,LSL #4
        LDRH     r0,[r0,#6]
        MUL      r10,r0,r1
        CMP      r5,#0x5000
        BCC      |L1.260|
        SUB      r5,r5,#0x5000
        B        |L1.268|
|L1.260|
        RSB      r5,r5,#0x5000
        ORR      r6,r6,#8
|L1.268|
        LDRB     r3,[r8,#0x10]
        LDR      r0,|L1.1044|
        ADD      r0,r0,r7,LSL #4
        LDRB     r1,[r0,#0xa]
        UXTH     r0,r5
        LDR      r2,[r8,#8]
        BL       Cal_Val_Get
        MOV      r5,r0
        CMP      r5,r10
        BLS      |L1.302|
        ORR      r6,r6,#1
        B        |L1.310|
|L1.302|
        CMP      r5,r9
        BCS      |L1.310|
        ORR      r6,r6,#2
|L1.310|
        LDR      r0,|L1.1048|
        UDIV     r0,r5,r0
        LDR      r1,|L1.1048|
        UDIV     r2,r5,r1
        MLS      r1,r1,r2,r5
        MOV      r2,#0xc350
        UDIV     r1,r1,r2
        ADDS     r5,r0,r1
        TST      r6,#8
        BEQ      |L1.350|
        ORR      r5,r5,#0x8000
        AND      r6,r6,#0xf7
|L1.350|
        CBZ      r7,|L1.358|
        CMP      r7,#1
        BNE      |L1.396|
        B        |L1.376|
|L1.358|
        LDRB     r0,[r4,#0x1d]
        BIC      r0,r0,#7
        STRB     r0,[r4,#0x1d]
        LDRB     r0,[r4,#0x1d]
        ORRS     r0,r0,r6
        STRB     r0,[r4,#0x1d]
        STRH     r5,[r4,#0]
        B        |L1.398|
|L1.376|
        LDRB     r0,[r4,#0x1d]
        BIC      r0,r0,#0x38
        STRB     r0,[r4,#0x1d]
        LDRB     r0,[r4,#0x1d]
        ORR      r0,r0,r6,LSL #3
        STRB     r0,[r4,#0x1d]
        STRH     r5,[r4,#2]
        B        |L1.398|
|L1.396|
        NOP      
|L1.398|
        NOP      
        MOVS     r0,#0
        POP      {r4-r10,pc}
        ENDP

BATU_SampData_fun PROC
        PUSH     {r4-r10,lr}
        MOV      r5,r0
        MOV      r8,r1
        MOVS     r6,#0
        LDRB     r7,[r8,#1]
        LDR      r0,|L1.1044|
        ADD      r0,r0,r7,LSL #4
        LDRH     r4,[r0,#4]
        LDR      r0,|L1.1044|
        ADD      r0,r0,r7,LSL #4
        LDRH     r0,[r0,#8]
        LDR      r1,|L1.1048|
        MUL      r9,r0,r1
        LDR      r0,|L1.1044|
        ADD      r0,r0,r7,LSL #4
        LDRH     r0,[r0,#6]
        MUL      r10,r0,r1
        CMP      r4,#0x5000
        BCC      |L1.466|
        SUB      r4,r4,#0x5000
        B        |L1.474|
|L1.466|
        RSB      r4,r4,#0x5000
        ORR      r6,r6,#8
|L1.474|
        LDRB     r3,[r8,#0x10]
        LDR      r0,|L1.1044|
        ADD      r0,r0,r7,LSL #4
        LDRB     r1,[r0,#0xa]
        UXTH     r0,r4
        LDR      r2,[r8,#8]
        BL       Cal_Val_Get
        MOV      r4,r0
        LDR      r0,|L1.1052|
        CMP      r4,r0
        BCS      |L1.508|
        ORR      r6,r6,#4
|L1.508|
        CMP      r4,r10
        BLS      |L1.518|
        ORR      r6,r6,#1
        B        |L1.526|
|L1.518|
        CMP      r4,r9
        BCS      |L1.526|
        ORR      r6,r6,#2
|L1.526|
        LDR      r0,|L1.1048|
        UDIV     r0,r4,r0
        LDR      r1,|L1.1048|
        UDIV     r2,r4,r1
        MLS      r1,r1,r2,r4
        MOV      r2,#0xc350
        UDIV     r1,r1,r2
        ADDS     r4,r0,r1
        TST      r6,#8
        BEQ      |L1.562|
        ORR      r4,r4,#0x8000
|L1.562|
        CMP      r7,#7
        BEQ      |L1.572|
        CMP      r7,#8
        BNE      |L1.608|
        B        |L1.590|
|L1.572|
        LDRB     r0,[r5,#0x1e]
        BIC      r0,r0,#0xf
        STRB     r0,[r5,#0x1e]
        LDRB     r0,[r5,#0x1e]
        ORRS     r0,r0,r6
        STRB     r0,[r5,#0x1e]
        STRH     r4,[r5,#4]
        B        |L1.610|
|L1.590|
        LDRB     r0,[r5,#0x1f]
        BIC      r0,r0,#0xf
        STRB     r0,[r5,#0x1f]
        LDRB     r0,[r5,#0x1f]
        ORRS     r0,r0,r6
        STRB     r0,[r5,#0x1f]
        STRH     r4,[r5,#6]
        B        |L1.610|
|L1.608|
        NOP      
|L1.610|
        NOP      
        MOVS     r0,#0
        POP      {r4-r10,pc}
        ENDP

JYBATP_SampData_fun PROC
        MOV      r2,r0
        MOVS     r0,#0
        BX       lr
        ENDP

JYBATN_SampData_fun PROC
        MOV      r2,r0
        MOVS     r0,#0
        BX       lr
        ENDP

JYRES_SampData_fun PROC
        PUSH     {r4-r10,lr}
        MOV      r8,r0
        MOV      r9,r1
        LDRB     r10,[r9,#1]
        LDR      r0,|L1.1044|
        ADD      r0,r0,r10,LSL #4
        LDRH     r0,[r0,#6]
        LDR      r1,|L1.1044|
        ADD      r0,r1,r0,LSL #4
        LDRH     r0,[r0,#6]
        ADD      r0,r1,r0,LSL #4
        LDRH     r7,[r0,#4]
        MOV      r0,r1
        ADD      r0,r0,r10,LSL #4
        LDRH     r0,[r0,#6]
        ADD      r0,r1,r0,LSL #4
        LDRH     r4,[r0,#4]
        MOV      r0,r1
        ADD      r0,r0,r10,LSL #4
        LDRH     r5,[r0,#4]
        MOV      r0,#0x5078
        CMP      r7,r0
        BCS      |L1.702|
        MOV      r0,#0x4f88
        CMP      r7,r0
        BHI      |L1.950|
|L1.702|
        CMP      r4,#0x5000
        BNE      |L1.724|
        CMP      r5,#0x5000
        BNE      |L1.724|
        MOVS     r4,#0
        MOVS     r5,#0
        MOVS     r7,#0
        MOVS     r6,#0
        B        |L1.1234|
|L1.724|
        CMP      r4,#0x5000
        BNE      |L1.746|
        CMP      r5,#0x5000
        BEQ      |L1.746|
        MOVS     r4,#0
        SUBS     r5,r4,#1
        MOVS     r7,#0
        SUBS     r6,r4,#1
        B        |L1.1234|
|L1.746|
        CMP      r5,#0x5000
        BNE      |L1.768|
        CMP      r4,#0x5000
        BEQ      |L1.768|
        MOVS     r5,#0
        SUBS     r4,r5,#1
        MOV      r7,r4
        MOVS     r6,#0
        B        |L1.1234|
|L1.768|
        LDR      r0,|L1.1056|
        LDRB     r0,[r0,#0]  ; Errornum
        CMP      r0,#6
        BLT      |L1.786|
        MOVS     r4,#0
        LDR      r5,|L1.1060|
        MOVS     r7,#0
        MOV      r6,r5
        B        |L1.1234|
|L1.786|
        CMP      r7,#0x5000
        BLS      |L1.804|
        CMP      r4,#0x5000
        BLS      |L1.804|
        CMP      r5,#0x5000
        BHI      |L1.822|
|L1.804|
        CMP      r7,#0x5000
        BCS      |L1.952|
        CMP      r4,#0x5000
        BCS      |L1.952|
        CMP      r5,#0x5000
        BCS      |L1.952|
|L1.822|
        LDRB     r3,[r9,#0x10]
        LDR      r12,|L1.1044|
        ADD      r12,r12,r10,LSL #4
        LDRB     r1,[r12,#0xa]
        SUB      r12,r7,#0x5000
        UXTH     r0,r12
        LDR      r2,[r9,#8]
        BL       Cal_Val_Get
        MOV      r7,r0
        MOV      r6,r7
        LDRB     r3,[r9,#0x10]
        LDR      r12,|L1.1044|
        ADD      r12,r12,r10,LSL #4
        LDRB     r1,[r12,#0xa]
        SUB      r12,r4,#0x5000
        UXTH     r0,r12
        LDR      r2,[r9,#8]
        BL       Cal_Val_Get
        MOV      r4,r0
        LDRB     r3,[r9,#0x10]
        LDR      r12,|L1.1044|
        ADD      r12,r12,r10,LSL #4
        LDRB     r1,[r12,#0xa]
        SUB      r12,r5,#0x5000
        UXTH     r0,r12
        LDR      r2,[r9,#8]
        BL       Cal_Val_Get
        MOV      r5,r0
        ADDS     r0,r4,r5
        MOV      r6,r7
        CMP      r0,r6
        BLS      |L1.978|
        LDR      r0,|L1.1056|
        LDRB     r0,[r0,#0]  ; Errornum
        ADDS     r0,r0,#1
        LDR      r1,|L1.1056|
        STRB     r0,[r1,#0]
        MOVS     r0,#1
|L1.946|
        POP      {r4-r10,pc}
|L1.950|
        B        |L1.966|
|L1.952|
        LDR      r0,|L1.1056|
        LDRB     r0,[r0,#0]  ; Errornum
        ADDS     r0,r0,#1
        LDR      r1,|L1.1056|
        STRB     r0,[r1,#0]
        MOVS     r0,#1
        B        |L1.946|
|L1.966|
        MOV      r4,#0xffffffff
        MOV      r5,r4
        MOV      r7,r4
        MOV      r6,r4
        B        |L1.1234|
|L1.978|
        ADDS     r0,r4,r5
        SUBS     r6,r6,r0
        MOV      r0,#0x3e8
        UDIV     r0,r6,r0
        MOV      r1,#0x3e8
        UDIV     r2,r6,r1
        MLS      r1,r1,r2,r6
        MOV      r2,#0x1f4
        UDIV     r1,r1,r2
        ADDS     r6,r0,r1
        LDR      r0,|L1.1044|
        ADD      r0,r0,r10,LSL #4
        LDRH     r0,[r0,#6]
        LDR      r1,|L1.1044|
        ADD      r0,r1,r0,LSL #4
        LDRH     r0,[r0,#8]
        MULS     r6,r0,r6
        LSLS     r0,r2,#1
        UDIV     r0,r5,r0
        LSLS     r1,r2,#1
        UDIV     r2,r5,r1
        B        |L1.1064|
|L1.1044|
        DCD      Samp_DataArr
|L1.1048|
        DCD      0x000186a0
|L1.1052|
        DCD      0x000f4240
|L1.1056|
        DCD      Errornum
|L1.1060|
        DCD      0xfeeeeeee
|L1.1064|
        MLS      r1,r1,r2,r5
        MOV      r2,#0x1f4
        UDIV     r1,r1,r2
        ADDS     r5,r0,r1
        UDIV     r0,r6,r5
        UDIV     r1,r6,r5
        MLS      r1,r5,r1,r6
        LSRS     r2,r5,#1
        UDIV     r1,r1,r2
        ADDS     r5,r0,r1
        MOV      r0,#0x3e8
        UDIV     r0,r4,r0
        MOV      r1,#0x3e8
        UDIV     r2,r4,r1
        MLS      r1,r1,r2,r4
        MOV      r2,#0x1f4
        UDIV     r1,r1,r2
        ADDS     r4,r0,r1
        UDIV     r0,r6,r4
        UDIV     r1,r6,r4
        MLS      r1,r4,r1,r6
        LSRS     r2,r4,#1
        UDIV     r1,r1,r2
        ADDS     r4,r0,r1
        MOV      r6,r4
        MOV      r4,r5
        MOV      r5,r6
        LDR      r0,|L1.2144|
        UDIV     r0,r7,r0
        LDR      r1,|L1.2144|
        UDIV     r2,r7,r1
        MLS      r1,r1,r2,r7
        MOV      r2,#0xc350
        UDIV     r1,r1,r2
        ADDS     r7,r0,r1
        MOV      r0,#0x3e8
        MULS     r0,r5,r0
        UDIV     r6,r0,r7
        MOV      r0,#0x3e8
        MULS     r0,r4,r0
        UDIV     r7,r0,r7
        CMP      r4,#0x10000
        BCC      |L1.1212|
        MOV      r0,#0xffff
        B        |L1.1214|
|L1.1212|
        MOV      r0,r4
|L1.1214|
        MOV      r4,r0
        CMP      r5,#0x10000
        BCC      |L1.1228|
        MOV      r0,#0xffff
        B        |L1.1230|
|L1.1228|
        MOV      r0,r5
|L1.1230|
        MOV      r5,r0
        NOP      
|L1.1234|
        CMP      r10,#0xd
        BEQ      |L1.1248|
        CMP      r10,#0xe
        BNE      |L1.1356|
        B        |L1.1302|
|L1.1248|
        STRH     r4,[r8,#0xc]
        STRH     r5,[r8,#0x10]
        LDRB     r0,[r8,#0x1e]
        BIC      r0,r0,#0x10
        STRB     r0,[r8,#0x1e]
        LDR      r0,|L1.2148|
        LDRH     r0,[r0,#0xd8]
        CMP      r0,r7
        BHI      |L1.1288|
        LDR      r0,|L1.2148|
        LDRH     r0,[r0,#0xd8]
        CMP      r0,r6
        BLS      |L1.1300|
|L1.1288|
        LDRB     r0,[r8,#0x1e]
        ORR      r0,r0,#0x10
        STRB     r0,[r8,#0x1e]
|L1.1300|
        B        |L1.1360|
|L1.1302|
        STRH     r4,[r8,#0xe]
        STRH     r5,[r8,#0x12]
        LDRB     r0,[r8,#0x1f]
        BIC      r0,r0,#0x10
        STRB     r0,[r8,#0x1f]
        LDR      r0,|L1.2148|
        LDRH     r0,[r0,#0xe8]
        CMP      r0,r7
        BHI      |L1.1342|
        LDR      r0,|L1.2148|
        LDRH     r0,[r0,#0xe8]
        CMP      r0,r6
        BLS      |L1.1354|
|L1.1342|
        LDRB     r0,[r8,#0x1f]
        ORR      r0,r0,#0x10
        STRB     r0,[r8,#0x1f]
|L1.1354|
        B        |L1.1360|
|L1.1356|
        MOVS     r0,#1
        B        |L1.946|
|L1.1360|
        NOP      
        MOVS     r0,#0
        LDR      r1,|L1.2152|
        STRB     r0,[r1,#0]
        NOP      
        B        |L1.946|
        ENDP

FZDYU_SampData_fun PROC
        PUSH     {r4-r7,lr}
        MOV      r2,r0
        MOV      r5,r1
        LDR      r0,|L1.2148|
        LDRH     r0,[r0,#0x24]
        SUB      r0,r0,#0x5000
        MOV      r6,#0x4787
        MUL      r1,r0,r6
        LDR      r0,|L1.2148|
        LDRH     r3,[r0,#0x28]
        LDRH     r4,[r0,#0x26]
        LDR      r0,|L1.2144|
        UDIV     r0,r1,r0
        LDR      r6,|L1.2144|
        UDIV     r7,r1,r6
        MLS      r6,r6,r7,r1
        MOV      r7,#0xc350
        UDIV     r6,r6,r7
        ADDS     r1,r0,r6
        LDRB     r0,[r2,#0x20]
        BIC      r0,r0,#1
        STRB     r0,[r2,#0x20]
        CMP      r1,r3
        BLS      |L1.1446|
        CMP      r1,r4
        BCC      |L1.1458|
|L1.1446|
        LDRB     r0,[r2,#0x20]
        ORR      r0,r0,#1
        STRB     r0,[r2,#0x20]
|L1.1458|
        MOVS     r0,#0
        POP      {r4-r7,pc}
        ENDP

LINKU_SampData_fun PROC
        PUSH     {r4,r5,lr}
        MOV      r2,r0
        MOV      r5,r1
        MOVS     r3,#0
        LDRB     r4,[r5,#1]
        LDR      r0,|L1.2148|
        ADD      r0,r0,r4,LSL #4
        LDRH     r1,[r0,#4]
        CMP      r1,#0x5000
        BCC      |L1.1548|
        MOV      r0,#0x8552
        CMP      r1,r0
        BCC      |L1.1504|
        MOV      r0,#0x9196
        CMP      r1,r0
        BHI      |L1.1504|
        B        |L1.1550|
|L1.1504|
        MOV      r0,#0x6dec
        CMP      r1,r0
        BCC      |L1.1524|
        MOV      r0,#0x7210
        CMP      r1,r0
        BHI      |L1.1524|
        MOVS     r3,#1
        B        |L1.1550|
|L1.1524|
        MOV      r0,#0x6342
        CMP      r1,r0
        BCC      |L1.1544|
        MOV      r0,#0x6766
        CMP      r1,r0
        BHI      |L1.1544|
        MOVS     r3,#3
        B        |L1.1550|
|L1.1544|
        MOVS     r3,#2
        B        |L1.1550|
|L1.1548|
        MOVS     r3,#2
|L1.1550|
        CMP      r4,#9
        BEQ      |L1.1580|
        CMP      r4,#0xc
        BNE      |L1.1602|
        LDRB     r0,[r2,#0x24]!
        BIC      r0,r0,#0x60
        STRB     r0,[r2,#0]
        LDRB     r0,[r2,#0]
        ORR      r0,r0,r3,LSL #5
        STRB     r0,[r2],#-0x24
        B        |L1.1606|
|L1.1580|
        LDRB     r0,[r2,#0x25]!
        BIC      r0,r0,#6
        STRB     r0,[r2,#0]
        LDRB     r0,[r2,#0]
        ORR      r0,r0,r3,LSL #1
        STRB     r0,[r2],#-0x25
        B        |L1.1606|
|L1.1602|
        MOVS     r0,#1
|L1.1604|
        POP      {r4,r5,pc}
|L1.1606|
        NOP      
        MOVS     r0,#0
        B        |L1.1604|
        ENDP

ADSample_Scream_Col PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOVS     r5,#4
        LDRB     r0,[r4,#0x24]
        ORR      r0,r0,#0x9f
        CMP      r0,#0xff
        BEQ      |L1.1670|
        MOVS     r0,#0
        STRH     r0,[r4,#0]
        STRH     r0,[r4,#4]
        STRH     r0,[r4,#8]
        MOV      r0,#0xffff
        STRH     r0,[r4,#0xc]
        STRH     r0,[r4,#0x10]
        LDRB     r0,[r4,#0x1d]
        BIC      r0,r0,#7
        STRB     r0,[r4,#0x1d]
        LDRB     r0,[r4,#0x1e]
        BIC      r0,r0,#0x3f
        STRB     r0,[r4,#0x1e]
        MOV      r0,#0x2489
        ORRS     r5,r5,r0
|L1.1670|
        LDRB     r0,[r4,#0x25]
        ORR      r0,r0,#0xf9
        CMP      r0,#0xff
        BEQ      |L1.1720|
        MOVS     r0,#0
        STRH     r0,[r4,#2]
        STRH     r0,[r4,#6]
        STRH     r0,[r4,#0xa]
        MOV      r0,#0xffff
        STRH     r0,[r4,#0xe]
        STRH     r0,[r4,#0x12]
        LDRB     r0,[r4,#0x1d]
        BIC      r0,r0,#0x38
        STRB     r0,[r4,#0x1d]
        LDRB     r0,[r4,#0x1f]
        BIC      r0,r0,#0x3f
        STRB     r0,[r4,#0x1f]
        MOV      r0,#0x4942
        ORRS     r5,r5,r0
|L1.1720|
        CBNZ     r5,|L1.1730|
        MOVS     r0,#0
        LDR      r1,|L1.2156|
        STRB     r0,[r1,#0]
|L1.1728|
        POP      {r4-r6,pc}
|L1.1730|
        MOV      r0,r5
        BL       __asm___11_AD_Sample_c_d7a81d7b__get_sampmemb
        MOV      r5,r0
        LDR      r0,|L1.2156|
        LDRB     r0,[r0,#0]  ; lastsamp
        ADDS     r0,r0,#1
        LSRS     r0,r5,r0
        BNE      |L1.1758|
        STRB     r0,[r6,#0]
        LDR      r1,|L1.2156|
        STRB     r0,[r1,#0]
        B        |L1.1798|
|L1.1758|
        LDR      r0,|L1.2156|
        LDRB     r0,[r0,#0]  ; lastsamp
        ADDS     r0,r0,#1
        UXTB     r0,r0
        LDR      r1,|L1.2156|
        STRB     r0,[r1,#0]
        LSRS     r5,r5,r0
        B        |L1.1786|
|L1.1774|
        LSRS     r5,r5,#1
        LDR      r0,|L1.2156|
        LDRB     r0,[r0,#0]  ; lastsamp
        ADDS     r0,r0,#1
        LDR      r1,|L1.2156|
        STRB     r0,[r1,#0]
|L1.1786|
        TST      r5,#1
        BEQ      |L1.1774|
        LDR      r0,|L1.2156|
        LDRB     r0,[r0,#0]  ; lastsamp
        STRB     r0,[r6,#0]
|L1.1798|
        NOP      
        B        |L1.1728|
        ENDP

ADSample_AnalogCHsel PROC
        MOV      r1,r0
        LDR      r0,|L1.2160|
        LDR      r0,[r0,#0]  ; nowchan
        CMP      r1,r0
        BNE      |L1.1816|
        MOVS     r0,#1
|L1.1814|
        BX       lr
|L1.1816|
        LDR      r0,|L1.2164|
        LDR      r0,[r0,#0xc]
        BIC      r0,r0,#0x300
        ORRS     r0,r0,r1
        LDR      r3,|L1.2164|
        STR      r0,[r3,#0xc]
        LDR      r2,|L1.2168|
        B        |L1.1836|
|L1.1834|
        SUBS     r2,r2,#1
|L1.1836|
        CMP      r2,#0
        BNE      |L1.1834|
        LDR      r0,|L1.2160|
        STR      r1,[r0,#0]  ; nowchan
        MOVS     r0,#0
        B        |L1.1814|
        ENDP

ADSample_Change PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#0
        LDRB     r0,[r4,#0]
        LDR      r1,|L1.2148|
        ADD      r0,r1,r0,LSL #4
        LDRH     r0,[r0,#2]
        LDRB     r1,[r4,#1]
        LDR      r2,|L1.2148|
        ADD      r1,r2,r1,LSL #4
        LDRH     r1,[r1,#2]
        CMP      r0,r1
        BEQ      |L1.1984|
        LDRB     r1,[r4,#0]
        ADD      r1,r2,r1,LSL #4
        LDRH     r0,[r1,#2]
        BL       ADS7953_CHsel
        CBZ      r0,|L1.1896|
        MOVS     r0,#1
|L1.1894|
        POP      {r4-r6,pc}
|L1.1896|
        LDRB     r0,[r4,#0]
        CMP      r0,#0xa
        BEQ      |L1.1916|
        CMP      r0,#0xb
        BEQ      |L1.1918|
        CMP      r0,#0xd
        BEQ      |L1.1930|
        CMP      r0,#0xe
        BNE      |L1.1944|
        B        |L1.1932|
|L1.1916|
        NOP      
|L1.1918|
        MOVS     r0,#0x80
        LDR      r1,|L1.2164|
        STR      r0,[r1,#0x10]
        LSLS     r0,r0,#15
        STR      r0,[r1,#0x10]
        B        |L1.1958|
|L1.1930|
        NOP      
|L1.1932|
        MOVS     r0,#0x40
        LDR      r1,|L1.2164|
        STR      r0,[r1,#0x10]
        LSLS     r0,r0,#17
        STR      r0,[r1,#0x10]
        B        |L1.1958|
|L1.1944|
        MOV      r0,#0x800000
        LDR      r1,|L1.2164|
        STR      r0,[r1,#0x10]
        ASRS     r0,r0,#1
        STR      r0,[r1,#0x10]
        NOP      
|L1.1958|
        NOP      
        LDRB     r1,[r4,#0]
        LDR      r2,|L1.2148|
        ADD      r1,r2,r1,LSL #4
        LDRH     r0,[r1,#0]
        BL       ADSample_AnalogCHsel
        MOVS     r0,#2
        BL       ADS7953_CHflush
        MOV      r5,r0
        B        |L1.2082|
|L1.1984|
        MOVS     r0,#1
        BL       ADS7953_CHflush
        CBZ      r0,|L1.1996|
        MOVS     r0,#1
        B        |L1.1894|
|L1.1996|
        LDRB     r0,[r4,#0]
        CMP      r0,#0xa
        BEQ      |L1.2016|
        CMP      r0,#0xb
        BEQ      |L1.2018|
        CMP      r0,#0xd
        BEQ      |L1.2030|
        CMP      r0,#0xe
        BNE      |L1.2044|
        B        |L1.2032|
|L1.2016|
        NOP      
|L1.2018|
        MOVS     r0,#0x80
        LDR      r1,|L1.2164|
        STR      r0,[r1,#0x10]
        LSLS     r0,r0,#15
        STR      r0,[r1,#0x10]
        B        |L1.2058|
|L1.2030|
        NOP      
|L1.2032|
        MOVS     r0,#0x40
        LDR      r1,|L1.2164|
        STR      r0,[r1,#0x10]
        LSLS     r0,r0,#17
        STR      r0,[r1,#0x10]
        B        |L1.2058|
|L1.2044|
        MOV      r0,#0x800000
        LDR      r1,|L1.2164|
        STR      r0,[r1,#0x10]
        ASRS     r0,r0,#1
        STR      r0,[r1,#0x10]
        NOP      
|L1.2058|
        NOP      
        LDRB     r1,[r4,#0]
        LDR      r2,|L1.2148|
        ADD      r1,r2,r1,LSL #4
        LDRH     r0,[r1,#0]
        BL       ADSample_AnalogCHsel
        MOVS     r0,#1
        BL       ADS7953_CHflush
        MOV      r5,r0
|L1.2082|
        CBNZ     r5,|L1.2184|
        LDRB     r0,[r4,#0]
        STRB     r0,[r4,#1]
        MOVS     r0,#0x2d
        LDR      r1,|L1.2172|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.2176|
        LDRH     r0,[r0,#0]
        MOV      r1,#0xfffe
        ANDS     r0,r0,r1
        LDR      r1,|L1.2176|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.2180|
        LDRB     r0,[r0,#0]  ; Systimememb
        ORR      r0,r0,#1
        LDR      r1,|L1.2180|
        STRB     r0,[r1,#0]
        LDR      r0,|L1.2176|
        LDRH     r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r1,|L1.2176|
        STRH     r0,[r1,#0]
        LDRB     r0,[r4,#0]
        CMP      r0,#0xe
        BLT      |L1.2186|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        B        |L1.2198|
|L1.2144|
        DCD      0x000186a0
|L1.2148|
        DCD      Samp_DataArr
|L1.2152|
        DCD      Errornum
|L1.2156|
        DCD      lastsamp
|L1.2160|
        DCD      nowchan
|L1.2164|
        DCD      0x40011000
|L1.2168|
        DCD      0x0003fffc
|L1.2172|
        DCD      ADSMstartcont
|L1.2176|
        DCD      0x40012c0c
|L1.2180|
        DCD      Systimememb
|L1.2184|
        B        |L1.2194|
|L1.2186|
        LDRB     r0,[r4,#0]
        ADDS     r0,r0,#1
        STRB     r0,[r4,#0]
        B        |L1.2198|
|L1.2194|
        MOVS     r0,#1
        B        |L1.1894|
|L1.2198|
        MOVS     r0,#0
        B        |L1.1894|
        ENDP

ADSample_Init PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.2312|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x10
        LDR      r1,|L1.2312|
        STR      r0,[r1,#0x18]
        MOV      r0,#0x800000
        LDR      r1,|L1.2316|
        STR      r0,[r1,#0x10]
        ASRS     r0,r0,#1
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x33000000
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x22000000
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0xcc000000
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0x33
        STR      r0,[r1,#4]
        MOV      r0,r1
        LDR      r0,[r0,#4]
        ORR      r0,r0,#0x22
        STR      r0,[r1,#4]
        MOV      r0,r1
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0xcc
        STR      r0,[r1,#4]
        LDR      r1,|L1.2320|
        LDRB     r1,[r1,#1]  ; Samp_ADdata_Stream
        LDR      r2,|L1.2324|
        ADD      r1,r2,r1,LSL #4
        LDRH     r0,[r1,#0]
        BL       ADSample_AnalogCHsel
        BL       ADS7953_Init
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L1.2312|
        DCD      0x40021000
|L1.2316|
        DCD      0x40011000
|L1.2320|
        DCD      Samp_ADdata_Stream
|L1.2324|
        DCD      Samp_DataArr

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

Samp_DataArr
        DCW      0x0300,0x0000
        DCW      0xa000,0x1db0
        DCW      0x07d0
        DCB      0x00,0x00
        DCD      MXU_SampData_fun
        DCW      0x0300,0x0000
        DCW      0xa000,0x1db0
        DCW      0x07d0
        DCB      0x02,0x00
        DCD      MXU_SampData_fun
        DCW      0x0300,0x0002
        DCW      0xa000,0x00fa
        DCW      0x00e6
        DCB      0xff,0x00
        DCD      FZDYU_SampData_fun
        DCW      0x0300,0x0003
        DCW      0xa00a,0x04e2
        DCW      0x0000
        DCB      0x04,0x00
        DCD      BATI_SampData_fun
        DCW      0x0300,0x0004
        DCW      0x0000,0x1000
        DCW      0x0000
        DCB      0xff,0x00
        DCD      HUMI_SampData_fun
        DCW      0x0300,0x0005
        DCW      0x0000,0x1000
        DCW      0x0000
        DCB      0xff,0x00
        DCD      TEMP_SampData_fun
        DCW      0x0300,0x0003
        DCW      0xa00a,0x04e2
        DCW      0x0000
        DCB      0x05,0x00
        DCD      BATI_SampData_fun
        DCW      0x0100,0x0000
        DCW      0xa000,0x1db0
        DCW      0x07d0
        DCB      0x01,0x00
        DCD      BATU_SampData_fun
        DCW      0x0100,0x0001
        DCW      0xa000,0x1db0
        DCW      0x07d0
        DCB      0x03,0x00
        DCD      BATU_SampData_fun
        DCW      0x0100,0x0002
        DCW      0xa000,0x0078
        DCW      0x0000
        DCB      0xff,0x00
        DCD      LINKU_SampData_fun
        DCW      0x0200,0x0000
        DCW      0x7800,0x0007
        DCW      0x07f8
        DCB      0xff,0x00
        DCD      JYBATP_SampData_fun
        DCW      0x0200,0x0001
        DCW      0x7800,0x0008
        DCW      0x07f8
        DCB      0xff,0x00
        DCD      JYBATP_SampData_fun
        DCW      0x0200,0x0002
        DCW      0xa000,0x0078
        DCW      0x0000
        DCB      0xff,0x00
        DCD      LINKU_SampData_fun
        DCW      0x0000,0x0000
        DCW      0x3c00,0x000a
        DCW      0x0064
        DCB      0x01,0x00
        DCD      JYRES_SampData_fun
        DCW      0x0000,0x0001
        DCW      0x3c00,0x000b
        DCW      0x0064
        DCB      0x03,0x00
        DCD      JYRES_SampData_fun
Samp_ADdata_Stream
        DCB      0x01,0x00
        DCW      0x0000
        DCW      0x0001
        DCB      0x00,0x00
        DCD      0x02faf080
        DCD      0x00e4e1c0
        DCB      0x0c,0x0a
        DCW      0x0000
        DCW      0x0000,0x0000
        DCW      0x0000
        DCB      0x00,0x00
Samp_DataStat
        DCW      0x0000,0x0000
        DCW      0x0000,0x0000
        DCW      0x0000,0x0000
        DCW      0xffff,0xffff
        DCW      0xffff,0xffff
        DCW      0x00f0,0x0000
        DCW      0x0000,0x0000
        DCB      0x0a,0x00,0x00,0x00
        DCB      0x00,0x00,0x00,0x00
        DCB      0x00,0x00,0x00,0x00
Errornum
        DCB      0x00
lastsamp
        DCB      0x00,0x00,0x00
nowchan
        DCD      0xffffffff

;*** Start embedded assembler ***

#line 1 "src\\AD_Sample.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___11_AD_Sample_c_d7a81d7b__get_sampmemb|
#line 449
|__asm___11_AD_Sample_c_d7a81d7b__get_sampmemb| PROC
#line 450

 LDR R1, =15
 LDR R3, =0x80000000
 SUB R2, R1, #1
 ASR R3, R3, R2
 LDR R2, =32
 SUB R2, R2, R1
 LSR R3, R3, R2

 MVN R0, R0
 AND R0, R0, R3
 BX LR
	ENDP

;*** End   embedded assembler ***

        EXPORT HUMI_SampData_fun [CODE]
        EXPORT TEMP_SampData_fun [CODE]
        EXPORT BATI_SampData_fun [CODE]
        EXPORT MXU_SampData_fun [CODE]
        EXPORT BATU_SampData_fun [CODE]
        EXPORT JYBATP_SampData_fun [CODE]
        EXPORT JYBATN_SampData_fun [CODE]
        EXPORT JYRES_SampData_fun [CODE]
        EXPORT FZDYU_SampData_fun [CODE]
        EXPORT LINKU_SampData_fun [CODE]
        EXPORT ADSample_Scream_Col [CODE]
        EXPORT ADSample_AnalogCHsel [CODE]
        EXPORT ADSample_Change [CODE]
        EXPORT ADSample_Init [CODE]
        EXPORT Samp_DataArr [DATA,SIZE=240]
        EXPORT Samp_ADdata_Stream [DATA,SIZE=28]
        EXPORT Samp_DataStat [DATA,SIZE=40]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT Cal_Val_Get [CODE]
        IMPORT ADS7953_CHsel [CODE]
        IMPORT ADS7953_CHflush [CODE]
        IMPORT ADSMstartcont [DATA]
        IMPORT Systimememb [DATA]
        IMPORT ADS7953_Init [CODE]

        KEEP Errornum
        KEEP lastsamp
        KEEP nowchan

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
