; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--debug -c --asm -o..\Output\flash.o --depend=..\Output\flash.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\src -I.\inc -I..\CMSIS -I"E:\Keil 4 ARM\ARM\RV31\Inc" -I"E:\Keil 4 ARM\ARM\CMSIS\Include" -I"E:\Keil 4 ARM\ARM\Inc\ST\STM32F10x" -DSTM32F10X_CL --omf_browse=..\Output\flash.crf src\Flash.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

Flash_Init PROC
        LDR      r0,|L1.740|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r1,|L1.740|
        STR      r0,[r1,#0]
        NOP      
|L1.14|
        LDR      r0,|L1.740|
        LDR      r0,[r0,#0]
        TST      r0,#2
        BEQ      |L1.14|
        BX       lr
        ENDP

Flash_FPEC_Unlock PROC
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0x10]
        TST      r0,#0x80
        BEQ      |L1.60|
        LDR      r0,|L1.748|
        LDR      r1,|L1.744|
        STR      r0,[r1,#4]
        LDR      r0,|L1.752|
        STR      r0,[r1,#4]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        TST      r0,#0x80
        BEQ      |L1.60|
        MOVS     r0,#1
|L1.58|
        BX       lr
|L1.60|
        MOVS     r0,#0
        B        |L1.58|
        ENDP

Flash_FPEC_Lock PROC
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x80
        LDR      r1,|L1.744|
        STR      r0,[r1,#0x10]
        BX       lr
        ENDP

Flash_OPT_Unlock PROC
        PUSH     {lr}
        BL       Flash_FPEC_Unlock
        CBNZ     r0,|L1.120|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0x10]
        TST      r0,#0x200
        BNE      |L1.120|
        LDR      r0,|L1.748|
        LDR      r1,|L1.744|
        STR      r0,[r1,#8]
        LDR      r0,|L1.752|
        STR      r0,[r1,#8]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        TST      r0,#0x200
        BNE      |L1.120|
        MOVS     r0,#1
|L1.118|
        POP      {pc}
|L1.120|
        MOVS     r0,#0
        B        |L1.118|
        ENDP

Flash_OPT_Lock PROC
        PUSH     {lr}
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0x10]
        TST      r0,#0x200
        BEQ      |L1.154|
        BL       Flash_FPEC_Unlock
        CBNZ     r0,|L1.154|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#0x200
        LDR      r1,|L1.744|
        STR      r0,[r1,#0x10]
|L1.154|
        POP      {pc}
        ENDP

Flash_Halfword_Program PROC
        MOV      r2,r0
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#1
        BNE      |L1.262|
        LDR      r0,|L1.756|
        CMP      r2,r0
        BHI      |L1.262|
        CMP      r2,#0x8000000
        BCC      |L1.262|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#7
        LDR      r3,|L1.744|
        STR      r0,[r3,#0x10]
        MOV      r0,r3
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#1
        STR      r0,[r3,#0x10]
        STRH     r1,[r2,#0]
        NOP      
|L1.206|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#1
        BNE      |L1.206|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#0x14
        BEQ      |L1.236|
        MOVS     r0,#0x14
        LDR      r3,|L1.744|
        STR      r0,[r3,#0xc]
        MOVS     r0,#1
|L1.234|
        BX       lr
|L1.236|
        LDRH     r0,[r2,#0]
        CMP      r0,r1
        BNE      |L1.262|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#0x20
        BEQ      |L1.262|
        MOVS     r0,#0x20
        LDR      r3,|L1.744|
        STR      r0,[r3,#0xc]
        MOVS     r0,#0
        B        |L1.234|
|L1.262|
        MOVS     r0,#1
        B        |L1.234|
        ENDP

Flash_Page_Erase PROC
        PUSH     {lr}
        MOV      r2,r0
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#1
        BNE      |L1.364|
        BL       Flash_FPEC_Unlock
        CBNZ     r0,|L1.364|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#7
        LDR      r1,|L1.744|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        STR      r2,[r0,#0x14]
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x40
        STR      r0,[r1,#0x10]
        NOP      
|L1.322|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#1
        BNE      |L1.322|
        MOV      r3,#0x200
        BFC      r2,#0,#11
        B        |L1.356|
|L1.342|
        LDM      r2!,{r0}
        ADDS     r0,r0,#1
        BEQ      |L1.352|
        MOVS     r0,#1
|L1.350|
        POP      {pc}
|L1.352|
        SUBS     r0,r3,#1
        UXTH     r3,r0
|L1.356|
        CMP      r3,#0
        BGT      |L1.342|
        MOVS     r0,#0
        B        |L1.350|
|L1.364|
        MOVS     r0,#1
        B        |L1.350|
        ENDP

Flash_Mass_Erase PROC
        PUSH     {lr}
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#1
        BNE      |L1.430|
        BL       Flash_FPEC_Unlock
        CBNZ     r0,|L1.430|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#7
        LDR      r1,|L1.744|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#4
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x40
        STR      r0,[r1,#0x10]
        NOP      
|L1.420|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#1
        BNE      |L1.420|
|L1.430|
        MOVS     r0,#0
        POP      {pc}
        ENDP

Flash_OPTBYTE_Program PROC
        PUSH     {lr}
        MOV      r2,r0
        MOV      r3,r1
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#1
        BNE      |L1.554|
        BL       Flash_OPT_Unlock
        CBNZ     r0,|L1.552|
        LDR      r0,|L1.760|
        CMP      r2,r0
        BHI      |L1.554|
        LDR      r0,|L1.760|
        SUBS     r0,r0,#0xf
        CMP      r2,r0
        BCC      |L1.554|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#0x30
        LDR      r1,|L1.744|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x10
        STR      r0,[r1,#0x10]
        STRH     r3,[r2,#0]
        NOP      
|L1.496|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#1
        BNE      |L1.496|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#0x14
        BEQ      |L1.526|
        MOVS     r0,#0x14
        LDR      r1,|L1.744|
        STR      r0,[r1,#0xc]
        MOVS     r0,#1
|L1.524|
        POP      {pc}
|L1.526|
        LDRH     r0,[r2,#0]
        CMP      r0,r3
        BNE      |L1.554|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#0x20
        BEQ      |L1.554|
        MOVS     r0,#0x20
        LDR      r1,|L1.744|
        STR      r0,[r1,#0xc]
        MOVS     r0,#0
        B        |L1.524|
|L1.552|
        B        |L1.554|
|L1.554|
        MOVS     r0,#0
        B        |L1.524|
        ENDP

Flash_OPTBYTE_Erase PROC
        PUSH     {lr}
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#1
        BNE      |L1.620|
        BL       Flash_OPT_Unlock
        CBNZ     r0,|L1.620|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#0x30
        LDR      r1,|L1.744|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x20
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x40
        STR      r0,[r1,#0x10]
        NOP      
|L1.610|
        LDR      r0,|L1.744|
        LDR      r0,[r0,#0xc]
        TST      r0,#1
        BNE      |L1.610|
|L1.620|
        MOVS     r0,#0
        POP      {pc}
        ENDP

Flash_Pagedata_Write PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOV      r4,r2
        MOV      r7,r3
        LDR      r8,[sp,#0x18]
        MOV      r0,r4
        BL       Flash_Page_Erase
        CBNZ     r0,|L1.736|
        B        |L1.674|
|L1.650|
        LDRH     r1,[r5],#2
        MOV      r0,r4
        ADDS     r4,r4,#2
        BL       Flash_Halfword_Program
        CMP      r0,#1
        BNE      |L1.670|
|L1.666|
        POP      {r4-r8,pc}
|L1.670|
        SUBS     r0,r7,#1
        UXTH     r7,r0
|L1.674|
        CMP      r7,#0
        BNE      |L1.650|
        B        |L1.706|
|L1.680|
        LDRB     r1,[r6],#1
        MOV      r0,r4
        ADDS     r4,r4,#2
        BL       Flash_Halfword_Program
        CMP      r0,#1
        BNE      |L1.698|
        B        |L1.666|
|L1.698|
        SUB      r0,r8,#1
        UXTH     r8,r0
|L1.706|
        CMP      r8,#0
        BNE      |L1.680|
        MOV      r1,#0x453
        MOV      r0,r4
        BL       Flash_Halfword_Program
        CMP      r0,#1
        BNE      |L1.728|
        B        |L1.666|
|L1.728|
        BL       Flash_FPEC_Lock
        MOVS     r0,#0
        B        |L1.666|
|L1.736|
        MOVS     r0,#1
        B        |L1.666|
        ENDP

|L1.740|
        DCD      0x40021000
|L1.744|
        DCD      0x40022000
|L1.748|
        DCD      0x45670123
|L1.752|
        DCD      0xcdef89ab
|L1.756|
        DCD      0x0801ffff
|L1.760|
        DCD      0x1ffff80f

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT Flash_Init [CODE]
        EXPORT Flash_FPEC_Unlock [CODE]
        EXPORT Flash_FPEC_Lock [CODE]
        EXPORT Flash_OPT_Unlock [CODE]
        EXPORT Flash_OPT_Lock [CODE]
        EXPORT Flash_Halfword_Program [CODE]
        EXPORT Flash_Page_Erase [CODE]
        EXPORT Flash_Mass_Erase [CODE]
        EXPORT Flash_OPTBYTE_Program [CODE]
        EXPORT Flash_OPTBYTE_Erase [CODE]
        EXPORT Flash_Pagedata_Write [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
