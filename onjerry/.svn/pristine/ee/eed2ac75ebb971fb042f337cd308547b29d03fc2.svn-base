; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--debug -c --asm -o..\Output\stat_control.o --depend=..\Output\stat_control.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\src -I.\inc -I..\CMSIS -I"E:\Keil 4 ARM\ARM\RV31\Inc" -I"E:\Keil 4 ARM\ARM\CMSIS\Include" -I"E:\Keil 4 ARM\ARM\Inc\ST\STM32F10x" -DSTM32F10X_CL --omf_browse=..\Output\stat_control.crf src\Stat_control.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

LED_IOinit PROC
        LDR      r0,|L1.840|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x10
        LDR      r1,|L1.840|
        STR      r0,[r1,#0x18]
        LDR      r0,|L1.844|
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0x3300000
        LDR      r1,|L1.844|
        STR      r0,[r1,#4]
        MOV      r0,r1
        LDR      r0,[r0,#4]
        ORR      r0,r0,#0x2200000
        STR      r0,[r1,#4]
        MOV      r0,r1
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0xcc00000
        STR      r0,[r1,#4]
        MOV      r0,r1
        LDR      r0,[r0,#4]
        ORR      r0,r0,#0x4400000
        STR      r0,[r1,#4]
        BX       lr
        ENDP

Relay_IOinit PROC
        LDR      r0,|L1.840|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x14
        LDR      r1,|L1.840|
        STR      r0,[r1,#0x18]
        LDR      r0,|L1.844|
        LDR      r0,[r0,#0]
        LDR      r1,|L1.848|
        ANDS     r0,r0,r1
        LDR      r1,|L1.844|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        LDR      r1,|L1.852|
        ORRS     r0,r0,r1
        LDR      r1,|L1.844|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        LDR      r1,|L1.856|
        ANDS     r0,r0,r1
        LDR      r1,|L1.844|
        STR      r0,[r1,#0]
        LDR      r0,|L1.860|
        LDR      r0,[r0,#0]
        MOV      r1,#0x3333
        BICS     r0,r0,r1
        LDR      r1,|L1.860|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        MOV      r1,#0x2222
        ORRS     r0,r0,r1
        LDR      r1,|L1.860|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        MOV      r1,#0xcccc
        BICS     r0,r0,r1
        LDR      r1,|L1.860|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

Coupler_IOinit PROC
        LDR      r0,|L1.840|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#8
        LDR      r1,|L1.840|
        STR      r0,[r1,#0x18]
        LDR      r0,|L1.864|
        LDR      r0,[r0,#0]
        LDR      r1,|L1.868|
        ANDS     r0,r0,r1
        LDR      r1,|L1.864|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        LDR      r1,|L1.872|
        ANDS     r0,r0,r1
        LDR      r1,|L1.864|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        LDR      r1,|L1.876|
        ORRS     r0,r0,r1
        LDR      r1,|L1.864|
        STR      r0,[r1,#0]
        ADDS     r0,r1,#4
        LDR      r0,[r0,#0]
        LDR      r1,|L1.880|
        ANDS     r0,r0,r1
        LDR      r1,|L1.864|
        ADDS     r1,r1,#4
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        LDR      r1,|L1.884|
        ANDS     r0,r0,r1
        LDR      r1,|L1.864|
        ADDS     r1,r1,#4
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        LDR      r1,|L1.888|
        ORRS     r0,r0,r1
        LDR      r1,|L1.864|
        ADDS     r1,r1,#4
        STR      r0,[r1,#0]
        BX       lr
        ENDP

Coupler_Updata PROC
        LDR      r1,|L1.864|
        ADDS     r1,r1,#8
        LDR      r1,[r1,#0]
        UBFX     r2,r1,#1,#1
        LDR      r1,|L1.864|
        ADDS     r1,r1,#8
        LDR      r1,[r1,#0]
        AND      r1,r1,#0x800
        ORR      r2,r2,r1,ASR #7
        LDR      r1,|L1.864|
        ADDS     r1,r1,#8
        LDR      r1,[r1,#0]
        AND      r1,r1,#0x2000
        ORR      r2,r2,r1,ASR #8
        LDR      r1,|L1.864|
        ADDS     r1,r1,#8
        LDR      r1,[r1,#0]
        AND      r1,r1,#0x8000
        ORR      r1,r2,r1,ASR #9
        MVNS     r1,r1
        AND      r1,r1,#0x71
        STRB     r1,[r0,#0x22]!
        LDRB     r1,[r0,#2]
        ORR      r1,r1,#1
        LDR      r2,|L1.864|
        ADDS     r2,r2,#8
        LDR      r2,[r2,#0]
        UBFX     r2,r2,#14,#1
        MVNS     r2,r2
        UXTB     r2,r2
        ANDS     r1,r1,r2
        STRB     r1,[r0,#2]
        LDR      r1,|L1.844|
        LDR      r1,[r1,#0xc]
        AND      r1,r1,#0x10
        ORR      r1,r1,#8
        LDR      r2,|L1.860|
        ADDS     r2,r2,#0xc
        LDR      r2,[r2,#0]
        AND      r2,r2,#1
        ORR      r1,r1,r2,LSL #7
        LDRB     r2,[r0,#2]
        AND      r2,r2,#0x67
        ORRS     r1,r1,r2
        STRB     r1,[r0,#2]
        LDR      r1,|L1.860|
        ADDS     r1,r1,#0xc
        LDR      r1,[r1,#0]
        UBFX     r1,r1,#3,#1
        LDR      r2,|L1.844|
        LDR      r2,[r2,#0xc]
        AND      r2,r2,#0x20
        ORR      r1,r1,r2,LSR #2
        LDRB     r2,[r0,#3]
        AND      r2,r2,#0xf6
        ORRS     r1,r1,r2
        STRB     r1,[r0,#3]
        SUB      r0,r0,#0x22
        BX       lr
        ENDP

Relay_Control PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        LDRH     r3,[r1,#2]
        LDRB     r0,[r2,#0x22]
        CBNZ     r0,|L1.434|
        LDRB     r0,[r2,#0x1d]
        CBNZ     r0,|L1.434|
        LDRB     r0,[r2,#0x1e]
        CBNZ     r0,|L1.434|
        LDRB     r0,[r2,#0x1f]
        CBNZ     r0,|L1.434|
        LDRH     r0,[r1,#4]
        CBNZ     r0,|L1.434|
        TST      r3,#0x100
        BEQ      |L1.602|
|L1.434|
        MOVS     r0,#4
        LDR      r4,|L1.860|
        ADDS     r4,r4,#0x10
        STR      r0,[r4,#0]
        LDRB     r0,[r2,#0x22]
        TST      r0,#0x63
        BNE      |L1.456|
        LDRH     r0,[r1,#4]
        CBZ      r0,|L1.496|
|L1.456|
        MOV      r0,#0x100000
        LDR      r4,|L1.844|
        STR      r0,[r4,#0x10]
        ASRS     r0,r0,#1
        LDR      r4,|L1.860|
        ADDS     r4,r4,#0x10
        STR      r0,[r4,#0]
        LDR      r4,|L1.844|
        STR      r0,[r4,#0x10]
        ASRS     r0,r0,#1
        STR      r0,[r4,#0x10]
        MOV      r0,#0x193
        ANDS     r3,r3,r0
        LDRH     r0,[r1,#2]
        MOV      r4,#0x193
        ANDS     r0,r0,r4
        STRH     r0,[r1,#2]
|L1.496|
        LDRB     r0,[r2,#0x22]
        TST      r0,#4
        BNE      |L1.518|
        LDRB     r0,[r2,#0x1d]
        TST      r0,#7
        BNE      |L1.518|
        LDRB     r0,[r2,#0x1e]
        CBZ      r0,|L1.546|
|L1.518|
        MOV      r0,#0x100000
        LDR      r4,|L1.844|
        STR      r0,[r4,#0x10]
        ASRS     r0,r0,#1
        STR      r0,[r4,#0x10]
        MOV      r0,#0x1f3
        ANDS     r3,r3,r0
        LDRH     r0,[r1,#2]
        MOV      r4,#0x1f3
        ANDS     r0,r0,r4
        STRH     r0,[r1,#2]
|L1.546|
        LDRB     r0,[r2,#0x22]
        TST      r0,#8
        BNE      |L1.568|
        LDRB     r0,[r2,#0x1d]
        TST      r0,#0x38
        BNE      |L1.568|
        LDRB     r0,[r2,#0x1f]
        CBZ      r0,|L1.612|
|L1.568|
        MOV      r0,#0x80000
        LDR      r4,|L1.860|
        ADDS     r4,r4,#0x10
        STR      r0,[r4,#0]
        ASRS     r0,r0,#1
        LDR      r4,|L1.844|
        STR      r0,[r4,#0x10]
        MOV      r0,#0x19f
        ANDS     r3,r3,r0
        LDRH     r0,[r1,#2]
        MOV      r4,#0x19f
        ANDS     r0,r0,r4
        STRH     r0,[r1,#2]
        B        |L1.612|
|L1.602|
        MOV      r0,#0x40000
        LDR      r4,|L1.860|
        ADDS     r4,r4,#0x10
        STR      r0,[r4,#0]
|L1.612|
        LDRB     r0,[r2,#0x24]
        UBFX     r0,r0,#5,#2
        CMP      r0,#3
        BEQ      |L1.640|
        MOV      r0,#0x1f1
        ANDS     r3,r3,r0
        LDRH     r0,[r1,#2]
        MOV      r4,#0x1f9
        ANDS     r0,r0,r4
        STRH     r0,[r1,#2]
|L1.640|
        LDRB     r0,[r2,#0x25]
        UBFX     r0,r0,#1,#2
        CMP      r0,#3
        BEQ      |L1.668|
        MOV      r0,#0x18f
        ANDS     r3,r3,r0
        LDRH     r0,[r1,#2]
        MOV      r4,#0x1cf
        ANDS     r0,r0,r4
        STRH     r0,[r1,#2]
|L1.668|
        TST      r3,#2
        BEQ      |L1.684|
        MOVS     r0,#1
        LDR      r4,|L1.860|
        ADDS     r4,r4,#0x10
        STR      r0,[r4,#0]
        B        |L1.694|
|L1.684|
        MOV      r0,#0x10000
        LDR      r4,|L1.860|
        ADDS     r4,r4,#0x10
        STR      r0,[r4,#0]
|L1.694|
        TST      r3,#4
        BEQ      |L1.708|
        MOVS     r0,#0x10
        LDR      r4,|L1.844|
        STR      r0,[r4,#0x10]
        B        |L1.716|
|L1.708|
        MOV      r0,#0x100000
        LDR      r4,|L1.844|
        STR      r0,[r4,#0x10]
|L1.716|
        TST      r3,#0x10
        BEQ      |L1.730|
        MOVS     r0,#0x20
        LDR      r4,|L1.844|
        STR      r0,[r4,#0x10]
        B        |L1.738|
|L1.730|
        MOV      r0,#0x200000
        LDR      r4,|L1.844|
        STR      r0,[r4,#0x10]
|L1.738|
        TST      r3,#0x20
        BEQ      |L1.754|
        MOVS     r0,#8
        LDR      r4,|L1.860|
        ADDS     r4,r4,#0x10
        STR      r0,[r4,#0]
        B        |L1.764|
|L1.754|
        MOV      r0,#0x80000
        LDR      r4,|L1.860|
        ADDS     r4,r4,#0x10
        STR      r0,[r4,#0]
|L1.764|
        TST      r3,#8
        BEQ      |L1.778|
        MOVS     r0,#8
        LDR      r4,|L1.844|
        STR      r0,[r4,#0x10]
        B        |L1.786|
|L1.778|
        MOV      r0,#0x80000
        LDR      r4,|L1.844|
        STR      r0,[r4,#0x10]
|L1.786|
        TST      r3,#0x40
        BEQ      |L1.800|
        MOVS     r0,#4
        LDR      r4,|L1.844|
        STR      r0,[r4,#0x10]
        B        |L1.808|
|L1.800|
        MOV      r0,#0x40000
        LDR      r4,|L1.844|
        STR      r0,[r4,#0x10]
|L1.808|
        TST      r3,#0x80
        BEQ      |L1.824|
        MOVS     r0,#2
        LDR      r4,|L1.860|
        ADDS     r4,r4,#0x10
        STR      r0,[r4,#0]
        B        |L1.834|
|L1.824|
        MOV      r0,#0x20000
        LDR      r4,|L1.860|
        ADDS     r4,r4,#0x10
        STR      r0,[r4,#0]
|L1.834|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L1.840|
        DCD      0x40021000
|L1.844|
        DCD      0x40011000
|L1.848|
        DCD      0xffccccff
|L1.852|
        DCD      0x00222200
|L1.856|
        DCD      0xff3333ff
|L1.860|
        DCD      0x40010800
|L1.864|
        DCD      0x40010c00
|L1.868|
        DCD      0xcfffffcf
|L1.872|
        DCD      0x3fffff3f
|L1.876|
        DCD      0x40000040
|L1.880|
        DCD      0xcccfcfcc
|L1.884|
        DCD      0x333f3f33
|L1.888|
        DCD      0x44404044

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT LED_IOinit [CODE]
        EXPORT Relay_IOinit [CODE]
        EXPORT Coupler_IOinit [CODE]
        EXPORT Coupler_Updata [CODE]
        EXPORT Relay_Control [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
