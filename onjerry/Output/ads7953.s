; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--debug -c --asm -o..\Output\ads7953.o --depend=..\Output\ads7953.d --cpu=Cortex-M3 --apcs=interwork -O1 -I.\src -I.\inc -I..\CMSIS -I"E:\Keil 4 ARM\ARM\RV31\Inc" -I"E:\Keil 4 ARM\ARM\CMSIS\Include" -I"E:\Keil 4 ARM\ARM\Inc\ST\STM32F10x" -DSTM32F10X_CL --omf_browse=..\Output\ads7953.crf src\ADS7953.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

SPI1_IRQHandler PROC
        PUSH     {r4-r7,lr}
        LDR      r7,|L1.716|
        MOVS     r0,#0x10
        STR      r0,[r7,#0]
        LDR      r5,|L1.720|
        LDRH     r0,[r5,#8]
        LDR      r1,|L1.724|
        TST      r0,#0xf0
        MOV      r6,#0
        LDRB     r2,[r1,#0]
        BEQ      |L1.62|
        LSLS     r3,r0,#26
        BPL      |L1.40|
        LDRH     r0,[r5,#0]
        ORR      r0,r0,#0x44
        STRH     r0,[r5,#0]
        B        |L1.142|
|L1.40|
        LSLS     r3,r0,#25
        BPL      |L1.48|
        LDRH     r0,[r5,#0xc]
        B        |L1.142|
|L1.48|
        LSLS     r3,r0,#27
        BMI      |L1.142|
        LSLS     r0,r0,#24
        BPL      |L1.62|
|L1.56|
        LDRH     r0,[r5,#8]
        LSLS     r0,r0,#24
        BMI      |L1.56|
|L1.62|
        LDRH     r0,[r5,#0xc]
        UBFX     r0,r0,#0,#12
        ADD      r0,r0,r0,LSL #2
        LSLS     r0,r0,#1
        LDR      r3,|L1.724|
        CMP      r2,#6
        LDRH     r3,[r3,#2]
        BEQ      |L1.108|
        CMP      r2,#7
        BEQ      |L1.102|
        LDR      r4,|L1.724|
        CMP      r0,r3
        LDR      r4,[r4,#8]
        BLS      |L1.120|
        ADD      r3,r3,r4
        STR      r3,[r1,#8]  ; addnum
        STRH     r0,[r1,#2]
        B        |L1.138|
|L1.102|
        STRH     r0,[r1,#4]
        STRH     r0,[r1,#2]
        B        |L1.142|
|L1.108|
        CMP      r0,r3
        BLS      |L1.116|
        STRH     r0,[r1,#2]
        B        |L1.142|
|L1.116|
        STRH     r0,[r1,#4]
        B        |L1.142|
|L1.120|
        LDRH     r3,[r1,#4]  ; min
        CMP      r0,r3
        BCS      |L1.134|
        ADD      r3,r3,r4
        STR      r3,[r1,#8]  ; addnum
        STRH     r0,[r1,#4]
        B        |L1.138|
|L1.134|
        ADD      r0,r0,r4
        STR      r0,[r1,#8]  ; addnum
|L1.138|
        CMP      r2,#1
        BEQ      |L1.156|
|L1.142|
        MOV      r0,#0x100000
        STR      r0,[r7,#0]
        SUBS     r2,r2,#1
        STRB     r2,[r1,#0]
        STRH     r6,[r5,#0xc]
        POP      {r4-r7,pc}
|L1.156|
        LDRH     r0,[r5,#4]
        BIC      r0,r0,#0x40
        STRH     r0,[r5,#4]
        STRH     r6,[r1,#2]
        STRH     r6,[r1,#4]
        MOVS     r0,#7
        STRB     r0,[r1,#0]
        LDR      r0,[r1,#8]  ; addnum
        MOVS     r3,#5
        UDIV     r2,r0,r3
        MLS      r0,r3,r2,r0
        ADD      r0,r2,r0,LSR #1
        LDR      r2,[r1,#0xc]  ; Samp_Databuff
        ADD      r0,r0,r2
        STR      r0,[r1,#0xc]  ; Samp_Databuff
        STR      r6,[r1,#8]  ; addnum
        POP      {r4-r7,pc}
        ENDP

SPI_Init PROC
        LDR      r0,|L1.728|
        LDR      r1,[r0,#0x18]
        MOV      r2,#0x1005
        ORRS     r1,r1,r2
        STR      r1,[r0,#0x18]
        LDR      r0,|L1.716|
        MOVS     r1,#0x10
        STR      r1,[r0,#0]
        LSLS     r1,r1,#17
        STR      r1,[r0,#0]
        LDR      r0,|L1.716|
        SUBS     r0,r0,#0x10
        LDR      r1,[r0,#0]
        LDR      r2,|L1.732|
        ANDS     r1,r1,r2
        STR      r1,[r0,#0]
        LDR      r1,[r0,#0]
        LDR      r2,|L1.736|
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        LDR      r1,[r0,#0]
        LDR      r2,|L1.740|
        ANDS     r1,r1,r2
        STR      r1,[r0,#0]
        LDR      r1,[r0,#0]
        LDR      r2,|L1.744|
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        LDR      r0,|L1.720|
        LDRH     r1,[r0,#0]
        BIC      r1,r1,#0x38
        STRH     r1,[r0,#0]
        LDRH     r1,[r0,#0]
        ORR      r1,r1,#0x10
        STRH     r1,[r0,#0]
        LDRH     r1,[r0,#0]
        BIC      r1,r1,#3
        STRH     r1,[r0,#0]
        LDRH     r1,[r0,#0]
        STRH     r1,[r0,#0]
        LDRH     r1,[r0,#0]
        BIC      r1,r1,#0x800
        STRH     r1,[r0,#0]
        LDRH     r1,[r0,#0]
        ORR      r1,r1,#0x800
        STRH     r1,[r0,#0]
        LDRH     r1,[r0,#0]
        BIC      r1,r1,#0x80
        STRH     r1,[r0,#0]
        LDRH     r1,[r0,#0]
        STRH     r1,[r0,#0]
        LDRH     r1,[r0,#0]
        BIC      r1,r1,#0x300
        STRH     r1,[r0,#0]
        LDRH     r1,[r0,#0]
        ORR      r1,r1,#0x300
        STRH     r1,[r0,#0]
        LDRH     r1,[r0,#0]
        BIC      r1,r1,#0x3d000
        STRH     r1,[r0,#0]
        LDRH     r1,[r0,#0]
        STRH     r1,[r0,#0]
        MOVS     r1,#0
        STRH     r1,[r0,#4]
        LDRH     r1,[r0,#0]
        ORR      r1,r1,#0x44
        STRH     r1,[r0,#0]
        BX       lr
        ENDP

SPI_TRAN PROC
        PUSH     {r4,r5,lr}
        LDR      r4,|L1.716|
        MOVS     r5,#0x10
        STR      r5,[r4,#0]
        NOP      
        MOV      r1,#0x100000
        STR      r1,[r4,#0]
        NOP      
        LDR      r2,|L1.720|
        LDRH     r1,[r2,#8]
        TST      r1,#0xf0
        BEQ      |L1.428|
        LSLS     r3,r1,#26
        BPL      |L1.400|
        LDRH     r0,[r2,#0]
        ORR      r0,r0,#0x44
        STRH     r0,[r2,#0]
        MOVS     r0,#1
        POP      {r4,r5,pc}
|L1.400|
        LSLS     r3,r1,#25
        BPL      |L1.410|
        LDRH     r0,[r2,#0xc]
        MOVS     r0,#2
        POP      {r4,r5,pc}
|L1.410|
        LSLS     r3,r1,#27
        BPL      |L1.418|
        MOVS     r0,#3
        POP      {r4,r5,pc}
|L1.418|
        LSLS     r3,r1,#24
        BPL      |L1.428|
|L1.422|
        LDRH     r3,[r2,#8]
        LSLS     r3,r3,#24
        BMI      |L1.422|
|L1.428|
        LSLS     r1,r1,#30
        BPL      |L1.456|
        STRH     r0,[r2,#0xc]
|L1.434|
        LDRH     r0,[r2,#8]
        AND      r0,r0,#0x83
        CMP      r0,#3
        BNE      |L1.434|
        LDRH     r0,[r2,#0xc]
|L1.446|
        LDRH     r0,[r2,#8]
        AND      r0,r0,#0x83
        CMP      r0,#2
        BNE      |L1.446|
|L1.456|
        STR      r5,[r4,#0]
        NOP      
        MOVS     r0,#0
        POP      {r4,r5,pc}
        ENDP

ADS7953_CHsel PROC
        PUSH     {r4-r6,lr}
        LDR      r4,|L1.720|
        LDRH     r1,[r4,#4]
        LSLS     r1,r1,#25
        BPL      |L1.478|
        MOVS     r0,#4
        POP      {r4-r6,pc}
|L1.478|
        MOV      r1,#0x1840
        ORR      r0,r1,r0,LSL #7
        UXTH     r0,r0
        BL       SPI_TRAN
        MOV      r6,r0
        MOVS     r0,#0
        BL       SPI_TRAN
        ORR      r5,r0,r6
        MOVS     r0,#0
        BL       SPI_TRAN
        ORR      r6,r0,r5
        MOVS     r0,#0
        BL       SPI_TRAN
        CBZ      r6,|L1.526|
        MOVS     r0,#5
        POP      {r4-r6,pc}
|L1.526|
        LDRH     r0,[r4,#8]
        TST      r0,#0x70
        BEQ      |L1.568|
        LSLS     r1,r0,#26
        BPL      |L1.550|
        LDRH     r0,[r4,#0]
        ORR      r0,r0,#0x44
        STRH     r0,[r4,#0]
        MOVS     r0,#1
        POP      {r4-r6,pc}
|L1.550|
        LSLS     r1,r0,#25
        BPL      |L1.560|
        LDRH     r0,[r4,#0xc]
        MOVS     r0,#2
        POP      {r4-r6,pc}
|L1.560|
        LSLS     r0,r0,#27
        BPL      |L1.568|
        MOVS     r0,#3
        POP      {r4-r6,pc}
|L1.568|
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP

ADS7953_CHflush PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r4,#0
        LDR      r6,|L1.720|
        LDRH     r0,[r6,#4]
        LSLS     r0,r0,#25
        BPL      |L1.602|
        MOVS     r0,#4
        POP      {r4-r6,pc}
|L1.590|
        MOVS     r0,#0
        BL       SPI_TRAN
        ORRS     r4,r4,r0
        SUBS     r5,r5,#1
        UXTB     r5,r5
|L1.602|
        CMP      r5,#0
        BNE      |L1.590|
        CBZ      r4,|L1.612|
        MOVS     r0,#5
        POP      {r4-r6,pc}
|L1.612|
        LDRH     r0,[r6,#8]
        TST      r0,#0x70
        BEQ      |L1.654|
        LSLS     r1,r0,#26
        BPL      |L1.636|
        LDRH     r0,[r6,#0]
        ORR      r0,r0,#0x44
        STRH     r0,[r6,#0]
        MOVS     r0,#1
        POP      {r4-r6,pc}
|L1.636|
        LSLS     r1,r0,#25
        BPL      |L1.646|
        LDRH     r0,[r6,#0xc]
        MOVS     r0,#2
        POP      {r4-r6,pc}
|L1.646|
        LSLS     r0,r0,#27
        BPL      |L1.654|
        MOVS     r0,#3
        POP      {r4-r6,pc}
|L1.654|
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP

ADS7953_SMstart PROC
        LDR      r0,|L1.720|
        LDRH     r1,[r0,#4]
        ORR      r1,r1,#0x40
        STRH     r1,[r0,#4]
        LDR      r1,|L1.716|
        MOVS     r2,#0x10
        STR      r2,[r1,#0]
        NOP      
        MOV      r2,#0x100000
        STR      r2,[r1,#0]
        NOP      
        MOVS     r1,#0
        STRH     r1,[r0,#0xc]
        MOVS     r0,#0
        BX       lr
        ENDP

ADS7953_Init PROC
        PUSH     {lr}
        BL       SPI_Init
        LDR      r0,|L1.748|
        LDR      r1,|L1.752|
        LDRB     r0,[r0,#1]  ; Samp_ADdata_Stream
        ADD      r0,r1,r0,LSL #4
        LDRH     r0,[r0,#2]
        POP      {lr}
        B        ADS7953_CHsel
        ENDP

|L1.716|
        DCD      0x40010810
|L1.720|
        DCD      0x40013000
|L1.724|
        DCD      ||.data||
|L1.728|
        DCD      0x40021000
|L1.732|
        DCD      0xccccffff
|L1.736|
        DCD      0x30330000
|L1.740|
        DCD      0x3333ffff
|L1.744|
        DCD      0x84800000
|L1.748|
        DCD      Samp_ADdata_Stream
|L1.752|
        DCD      Samp_DataArr

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

addcount
        DCB      0x07,0x00
max
        DCB      0x00,0x00
min
        DCB      0x00,0x00,0x00,0x00
addnum
        DCD      0x00000000
Samp_Databuff
        DCD      0x00000000

        EXPORT SPI1_IRQHandler [CODE]
        EXPORT SPI_Init [CODE]
        EXPORT SPI_TRAN [CODE]
        EXPORT ADS7953_CHsel [CODE]
        EXPORT ADS7953_CHflush [CODE]
        EXPORT ADS7953_SMstart [CODE]
        EXPORT ADS7953_Init [CODE]
        EXPORT Samp_Databuff [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT Samp_ADdata_Stream [DATA]
        IMPORT Samp_DataArr [DATA]

        KEEP addcount
        KEEP max
        KEEP min
        KEEP addnum

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,5
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
