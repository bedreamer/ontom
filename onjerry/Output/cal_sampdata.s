; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--debug -c --asm -o..\Output\cal_sampdata.o --depend=..\Output\cal_sampdata.d --cpu=Cortex-M3 --apcs=interwork -O1 -I.\src -I.\inc -I..\CMSIS -I"E:\Keil 4 ARM\ARM\RV31\Inc" -I"E:\Keil 4 ARM\ARM\CMSIS\Include" -I"E:\Keil 4 ARM\ARM\Inc\ST\STM32F10x" -DSTM32F10X_CL --omf_browse=..\Output\cal_sampdata.crf src\Cal_Sampdata.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

Cal_Init PROC
        PUSH     {r4-r6,lr}
        LDR      r4,|L1.836|
        ADD      r5,r1,r2,LSL #1
        LDRH     r5,[r5,r3,LSL #1]
        SUB      r6,r5,#0x400
        SUBS     r6,r6,#0x53
        BNE      |L1.56|
        B        |L1.34|
|L1.22|
        LDRH     r5,[r1],#2
        STRH     r5,[r4],#2
        SUBS     r2,r2,#1
        UXTH     r2,r2
|L1.34|
        CMP      r2,#0
        BNE      |L1.22|
        B        |L1.52|
|L1.40|
        LDRH     r2,[r1],#2
        STRB     r2,[r0],#1
        SUBS     r3,r3,#1
        UXTH     r3,r3
|L1.52|
        CMP      r3,#0
        BNE      |L1.40|
|L1.56|
        POP      {r4-r6,pc}
        ENDP

Cal_DataPro PROC
        PUSH     {r3-r9,lr}
        LDR      r5,|L1.836|
        LDRH     r2,[r0,#0]
        LDRH     r12,[r1,#0x12]
        LSL      r3,r2,#8
        ORR      r3,r3,r2,LSR #8
        LSLS     r8,r12,#28
        MOV      r7,#0x1770
        MOV      r6,#0x1f4
        UXTH     r2,r3
        SUB      r4,r5,#2
        BEQ      |L1.110|
        LDRH     r3,[r1,#0x14]
        CMP      r2,r3
        BEQ      |L1.172|
        MOVS     r0,#1
|L1.106|
        POP      {r3-r9,pc}
|L1.110|
        LSLS     r3,r3,#16
        LSRS     r3,r3,#16
        BEQ      |L1.162|
        SUB      r3,r2,#0x7d0
        CMP      r3,r7
        BHI      |L1.134|
        UDIV     r3,r2,r6
        MLS      r2,r6,r3,r2
        CBZ      r2,|L1.138|
|L1.134|
        MOVS     r0,#1
        B        |L1.106|
|L1.138|
        LDRB     r2,[r1,#0x10]
        SUBS     r3,r3,#4
        CMP      r3,r2
        BGE      |L1.148|
        STRB     r3,[r1,#0x10]
|L1.148|
        ORR      r2,r12,#5
        STRH     r2,[r1,#0x12]
        LDRB     r2,[r4,#0]  ; cal_flag
        ORR      r2,r2,#1
        STRB     r2,[r4,#0]
|L1.162|
        LDRH     r2,[r0,#0]
        LSLS     r3,r2,#8
        ORR      r2,r3,r2,LSR #8
        STRH     r2,[r1,#0x14]
|L1.172|
        ADDS     r0,r0,#2
        LDRH     r12,[r1,#0x12]
        TST      r12,#0xf0
        BEQ      |L1.204|
        LDRH     r2,[r0,#0]
        LSLS     r3,r2,#8
        ORR      r2,r3,r2,LSR #8
        LDRH     r3,[r1,#0x16]
        UXTH     r2,r2
        CMP      r2,r3
        BEQ      |L1.276|
        MOVS     r0,#1
        B        |L1.106|
|L1.204|
        LDRH     r2,[r0,#0]
        LSLS     r3,r2,#8
        ORR      r2,r3,r2,LSR #8
        LSLS     r3,r2,#16
        LSRS     r3,r3,#16
        BEQ      |L1.266|
        UXTH     r3,r2
        SUB      r2,r3,#0x7d0
        CMP      r2,r7
        BHI      |L1.238|
        UDIV     r2,r3,r6
        MLS      r3,r6,r2,r3
        CBZ      r3,|L1.242|
|L1.238|
        MOVS     r0,#1
        B        |L1.106|
|L1.242|
        LDRB     r3,[r1,#0x10]
        SUBS     r2,r2,#4
        CMP      r2,r3
        BGE      |L1.252|
        STRB     r2,[r1,#0x10]
|L1.252|
        ORR      r2,r12,#0x50
        STRH     r2,[r1,#0x12]
        LDRB     r2,[r4,#0]  ; cal_flag
        ORR      r2,r2,#1
        STRB     r2,[r4,#0]
|L1.266|
        LDRH     r2,[r0,#0]
        LSLS     r3,r2,#8
        ORR      r2,r3,r2,LSR #8
        STRH     r2,[r1,#0x16]
|L1.276|
        ADDS     r0,r0,#2
        LDRH     r6,[r1,#0x12]
        TST      r6,#0xf00
        BEQ      |L1.306|
        LDRH     r0,[r0,#0]
        LSLS     r2,r0,#8
        ORR      r0,r2,r0,LSR #8
        LDRH     r2,[r1,#0x18]
        UXTH     r0,r0
        CMP      r0,r2
        BEQ      |L1.398|
        MOVS     r0,#1
        B        |L1.106|
|L1.306|
        LDRH     r2,[r0,#0]
        LSLS     r3,r2,#8
        ORR      r3,r3,r2,LSR #8
        LSLS     r2,r3,#16
        LSRS     r2,r2,#16
        BEQ      |L1.388|
        LDR      r2,[r1,#0xc]
        UXTH     r3,r3
        ADD      r7,r2,r2,LSL #2
        LSL      r12,r7,#1
        LDR      r7,|L1.840|
        UDIV     r12,r12,r7
        CMP      r12,r3
        BCC      |L1.356|
        UDIV     r2,r2,r7
        UDIV     r7,r3,r2
        MLS      r2,r2,r7,r3
        CBZ      r2,|L1.360|
|L1.356|
        MOVS     r0,#1
        B        |L1.106|
|L1.360|
        MOVS     r2,#0x96
        UDIV     r2,r3,r2
        LDRB     r3,[r1,#0x11]
        CMP      r2,r3
        BCS      |L1.374|
        STRB     r2,[r1,#0x11]
|L1.374|
        ORR      r2,r6,#0x500
        STRH     r2,[r1,#0x12]
        LDRB     r2,[r4,#0]  ; cal_flag
        ORR      r2,r2,#1
        STRB     r2,[r4,#0]
|L1.388|
        LDRH     r0,[r0,#0]
        LSLS     r2,r0,#8
        ORR      r0,r2,r0,LSR #8
        STRH     r0,[r1,#0x18]
|L1.398|
        LDRH     r0,[r1,#0x12]
        LDRH     r2,[r1,#0x14]
        LDRH     r3,[r1,#0x18]
        ORRS     r0,r0,r2
        LDRH     r2,[r1,#0x16]
        ORRS     r2,r2,r3
        ORRS     r0,r0,r2
        BNE      |L1.450|
        LDRB     r0,[r4,#0]  ; cal_flag
        CMP      r0,#1
        BNE      |L1.450|
        MOVS     r0,#2
        STR      r0,[sp,#0]
        MOVS     r3,#0x4e
        LDR      r2,|L1.844|
        ADDS     r1,r1,#0x10
        MOV      r0,r5
        BL       Flash_Pagedata_Write
        CBZ      r0,|L1.442|
        MOVS     r0,#1
        B        |L1.106|
|L1.442|
        LDRB     r0,[r4,#0]  ; cal_flag
        AND      r0,r0,#0xfe
        STRB     r0,[r4,#0]
|L1.450|
        MOVS     r0,#0
        B        |L1.106|
        ENDP

Cal_Val_Get PROC
        PUSH     {r4-r9,lr}
        CMP      r1,#4
        BEQ      |L1.528|
        CMP      r1,#5
        BEQ      |L1.528|
        LDR      r12,|L1.848|
        ASR      r4,r12,#9
        MULS     r4,r3,r4
        ADD      r6,r12,r4,LSL #7
        MOVS     r5,#0xc
|L1.482|
        ADD      r4,r1,r1,LSL #2
        LDR      r8,|L1.836|
        ADD      r9,r4,r1,LSL #3
        ADD      r7,r8,r9,LSL #1
        LDRH     r4,[r7,r3,LSL #1]
        CMP      r4,r0
        BCC      |L1.544|
        UDIV     r1,r6,r4
        MLS      r2,r4,r1,r6
        LSRS     r3,r4,#1
        UDIV     r2,r2,r3
        ADD      r1,r1,r2
        MULS     r0,r1,r0
|L1.524|
        POP      {r4-r9,pc}
|L1.528|
        MOV      r12,#0
        LDR      r4,|L1.852|
        MULS     r4,r3,r4
        ADD      r6,r12,r4,LSL #6
        MOVS     r5,#0xa
        B        |L1.482|
|L1.544|
        ADDS     r4,r5,r3
        LSRS     r4,r4,#1
|L1.548|
        LDRH     r6,[r7,r4,LSL #1]
        CMP      r6,r0
        BLS      |L1.560|
        MOV      r5,r4
        B        |L1.564|
|L1.560|
        BCS      |L1.618|
        MOV      r3,r4
|L1.564|
        ADD      r4,r5,r3
        LSR      r4,r4,#1
        CMP      r4,r3
        BNE      |L1.548|
|L1.576|
        SUBS     r1,r5,#1
        LDRH     r3,[r7,r5,LSL #1]
        LDRH     r1,[r7,r1,LSL #1]
        SUBS     r1,r3,r1
        UDIV     r4,r2,r1
        MLS      r6,r1,r4,r2
        LSRS     r1,r1,#1
        UDIV     r1,r6,r1
        ADD      r1,r1,r4
        MLA      r2,r2,r5,r12
        MLS      r2,r1,r3,r2
        MLA      r0,r0,r1,r2
        B        |L1.524|
|L1.618|
        MOV      r5,r4
        B        |L1.576|
        ENDP

Cal_ADdata_Copy PROC
        PUSH     {r4,r5,lr}
        LDRH     r4,[r1,#0x12]
        LSLS     r2,r0,#1
        LSR      r3,r4,r2
        AND      r5,r3,#3
        MOVS     r3,#3
        LSLS     r3,r3,r2
        CMP      r5,#1
        BEQ      |L1.670|
        CMP      r5,#2
        BNE      |L1.680|
        LDRB     r4,[r1,#1]
        LDR      r2,|L1.840|
        CMP      r4,#9
        BCS      |L1.680|
        TBB      [pc,r4]
        DCB      0x0b,0x15,0x0a,0x1f
        DCB      0x0a,0x0a,0x1f,0x0b
        DCB      0x15,0x00
|L1.670|
        BICS     r4,r4,r3
        MOVS     r0,#2
        LSLS     r0,r0,r2
        ORRS     r4,r4,r0
        STRH     r4,[r1,#0x12]
|L1.680|
        POP      {r4,r5,pc}
        LDR      r5,[r1,#8]
        UDIV     r5,r5,r2
        LDRH     r2,[r1,#0x14]
        SUB      r2,r2,#0x7d0
        UDIV     r2,r2,r5
        UXTB     r2,r2
        B        |L1.736|
        LDR      r5,[r1,#8]
        UDIV     r5,r5,r2
        LDRH     r2,[r1,#0x16]
        SUB      r2,r2,#0x7d0
        UDIV     r2,r2,r5
        UXTB     r2,r2
        B        |L1.736|
        LDR      r5,[r1,#0xc]
        UDIV     r2,r5,r2
        LDRH     r5,[r1,#0x18]
        UDIV     r2,r5,r2
        UXTB     r2,r2
|L1.736|
        LDR      r5,|L1.856|
        ADD      r4,r5,r4,LSL #4
        ADD      r5,r0,r0,LSL #2
        ADD      r0,r5,r0,LSL #3
        LDR      r5,|L1.836|
        LDRH     r4,[r4,#4]
        ADD      r0,r5,r0,LSL #1
        SUB      r4,r4,#0x5000
        STRH     r4,[r0,r2,LSL #1]
        LDRH     r0,[r1,#0x12]
        BICS     r0,r0,r3
        STRH     r0,[r1,#0x12]
        POP      {r4,r5,pc}
        ENDP

Cal_ADscream_Change PROC
        LDRB     r1,[r0,#1]
        CMP      r1,#9
        BCS      |L1.832|
        TBB      [pc,r1]
        DCB      0x05,0x0b,0x18,0x11
        DCB      0x18,0x18,0x14,0x08
        DCB      0x0e,0x00
        MOVS     r1,#7
        STRB     r1,[r0,#0]
        B        |L1.828|
        MOVS     r1,#1
        STRB     r1,[r0,#0]
        B        |L1.828|
        MOVS     r1,#8
        STRB     r1,[r0,#0]
        B        |L1.828|
        MOVS     r1,#3
        STRB     r1,[r0,#0]
        B        |L1.828|
        MOVS     r1,#6
        STRB     r1,[r0,#0]
        B        |L1.828|
        MOVS     r1,#0
        STRB     r1,[r0,#0]
|L1.828|
        MOVS     r0,#0
        BX       lr
|L1.832|
        MOVS     r0,#1
        BX       lr
        ENDP

|L1.836|
        DCD      ||.data||+0x2
|L1.840|
        DCD      0x000186a0
|L1.844|
        DCD      0x0801f800
|L1.848|
        DCD      0x0bebc200
|L1.852|
        DCD      0x00039387
|L1.856|
        DCD      Samp_DataArr

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=1

cal_flag
        DCB      0x00,0x00
DATA_SAMPLE_ADPOINT
        DCW      0x13c4
        DCW      0x1888,0x1d4c
        DCW      0x2210,0x26d4
        DCW      0x2b98,0x3052
        DCW      0x34e4,0x3962
        DCW      0x3d9a,0x43bc
        DCW      0x49de,0x4ff6
        DCW      0x13c4,0x1888
        DCW      0x1d4c,0x2210
        DCW      0x26d4,0x2b98
        DCW      0x3052,0x34e4
        DCW      0x3962,0x3d9a
        DCW      0x43bc,0x49de
        DCW      0x4ff6,0x13c4
        DCW      0x1888,0x1d4c
        DCW      0x2210,0x26d4
        DCW      0x2b98,0x3052
        DCW      0x34e4,0x3962
        DCW      0x3d9a,0x43bc
        DCW      0x49de,0x4ff6
        DCW      0x13c4,0x1888
        DCW      0x1d4c,0x2210
        DCW      0x26d4,0x2b98
        DCW      0x3052,0x34e4
        DCW      0x3962,0x3d9a
        DCW      0x43bc,0x49de
        DCW      0x4ff6,0x0000
        DCW      0x073a,0x0e42
        DCW      0x1540,0x1c48
        DCW      0x2332,0x2a44
        DCW      0x30d4,0x37a0
        DCW      0x3dfe,0x43b2
        DCW      0x49d4,0x4fec
        DCW      0x0000,0x073a
        DCW      0x0e42,0x1540
        DCW      0x1c48,0x2332
        DCW      0x2a44,0x30d4
        DCW      0x37a0,0x3dfe
        DCW      0x43b2,0x49d4
        DCW      0x4fec

        EXPORT Cal_Init [CODE]
        EXPORT Cal_DataPro [CODE]
        EXPORT Cal_Val_Get [CODE]
        EXPORT Cal_ADdata_Copy [CODE]
        EXPORT Cal_ADscream_Change [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT Flash_Pagedata_Write [CODE]
        IMPORT Samp_DataArr [DATA]

        KEEP cal_flag
        KEEP DATA_SAMPLE_ADPOINT

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,5
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
