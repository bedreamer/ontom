; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--debug -c --asm -o..\Output\can.o --depend=..\Output\can.d --cpu=Cortex-M3 --apcs=interwork -O1 -I.\src -I.\inc -I..\CMSIS -I"E:\Keil 4 ARM\ARM\RV31\Inc" -I"E:\Keil 4 ARM\ARM\CMSIS\Include" -I"E:\Keil 4 ARM\ARM\Inc\ST\STM32F10x" -DSTM32F10X_CL --omf_browse=..\Output\can.crf src\CAN.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

CAN_Interrupt_EnorDis PROC
        LDR      r3,|L1.1020|
        ADD      r0,r3,r0,LSL #10
        CBZ      r2,|L1.16|
        LDR      r2,[r0,#0x14]
        ORRS     r2,r2,r1
|L1.12|
        STR      r2,[r0,#0x14]
        BX       lr
|L1.16|
        LDR      r2,[r0,#0x14]
        BICS     r2,r2,r1
        B        |L1.12|
        ENDP

CAN_FIFO_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r2,#0
        MOVS     r1,#0x12
        MOV      r0,r5
        BL       CAN_Interrupt_EnorDis
        LDR      r0,|L1.1024|
        MOVS     r4,#0
        ADD      r1,r0,r5,LSL #2
        STRB     r4,[r1,#3]
        STRB     r4,[r1,#1]
        STRB     r4,[r1,#2]
        MOVS     r2,#1
        MOVS     r1,#0x12
        MOV      r0,r5
        BL       CAN_Interrupt_EnorDis
        LDR      r0,|L1.1024|
        ADDS     r0,r0,#8
        ADD      r0,r0,r5,LSL #2
        STRB     r4,[r0,#3]
        STRB     r4,[r0,#1]
        STRB     r4,[r0,#2]
        POP      {r4-r6,pc}
        ENDP

CAN_FrameProc_RxFIFORece PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r6,r1
        ADD      r4,r6,r5,LSL #2
        LDRB     r0,[r4,#3]
        CBZ      r0,|L1.120|
        LDRB     r0,[r4,#1]
        ADD      r0,r0,r0,LSL #1
        ADD      r1,r2,r0,LSL #2
        LDRB     r0,[r1,#0]
        LDR      r2,[r3,r0,LSL #2]
        MOV      r0,r5
        BLX      r2
        CBZ      r0,|L1.124|
        CMP      r0,#1
        BEQ      |L1.124|
        CMP      r0,#2
        BEQ      |L1.124|
|L1.120|
        MOVS     r0,#1
        POP      {r4-r6,pc}
|L1.124|
        MOVS     r2,#0
        MOVS     r1,#0x12
        MOV      r0,r5
        BL       CAN_Interrupt_EnorDis
        LDRB     r0,[r4,#1]
        ADDS     r0,r0,#1
        UXTB     r0,r0
        STRB     r0,[r4,#1]
        LDRB     r1,[r6,r5,LSL #2]
        CMP      r0,r1
        BNE      |L1.154|
        MOVS     r0,#0
        STRB     r0,[r4,#1]
|L1.154|
        LDRB     r0,[r4,#3]
        SUBS     r0,r0,#1
        STRB     r0,[r4,#3]
        MOVS     r2,#1
        MOVS     r1,#0x12
        MOV      r0,r5
        BL       CAN_Interrupt_EnorDis
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP

CAN_FrameTestSend PROC
        CBZ      r0,|L1.184|
        CMP      r0,#1
        BEQ      |L1.184|
        MOVS     r0,#1
        BX       lr
|L1.184|
        LDR      r2,|L1.1020|
        ADD      r0,r2,r0,LSL #10
        LDR      r2,[r0,#8]
        TST      r2,#0x1c000000
        BEQ      |L1.210|
        LDR      r0,[r0,#8]
        UBFX     r0,r0,#24,#2
        STR      r0,[r1,#0]
        MOVS     r0,#0
        BX       lr
|L1.210|
        MOVS     r0,#2
        BX       lr
        ENDP

CAN_FrameSend PROC
        PUSH     {r4,r5,lr}
        LDR      r3,|L1.1020|
        ADD      r3,r3,r0,LSL #10
        LDR      r5,|L1.1028|
        ADD      r0,r0,r0,LSL #1
        ADD      r0,r5,r0,LSL #2
        LDR      r4,[r2,#0xc]
        STR      r4,[r0,r1,LSL #2]
        ADD      r0,r3,r1,LSL #4
        ADD      r0,r0,#0x180
        MOVS     r4,#8
        STR      r4,[r0,#4]
        LDR      r1,[r2,#0]
        STR      r1,[r0,#8]
        LDR      r1,[r2,#4]
        STR      r1,[r0,#0xc]
        LDR      r1,[r2,#8]
        MOV      r2,#5
        ADD      r1,r2,r1,LSL #3
        STR      r1,[r0,#0]
        POP      {r4,r5,pc}
        ENDP

CAN_FrameProc_TxFIFOSend PROC
        PUSH     {r3-r7,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOV      r7,r2
        ADD      r4,r6,r5,LSL #2
        LDRB     r0,[r4,#3]
        CBZ      r0,|L1.298|
        MOV      r1,sp
        MOV      r0,r5
        BL       CAN_FrameTestSend
        CBZ      r0,|L1.302|
|L1.298|
        MOVS     r0,#1
        POP      {r3-r7,pc}
|L1.302|
        LDRB     r0,[r4,#1]
        ADD      r2,r7,r0,LSL #4
        MOV      r0,r5
        LDR      r1,[sp,#0]
        BL       CAN_FrameSend
        LDRB     r0,[r4,#1]
        ADDS     r0,r0,#1
        UXTB     r2,r0
        STRB     r2,[r4,#1]
        LDRB     r0,[r6,r5,LSL #2]
        CMP      r2,r0
        BNE      |L1.336|
        MOVS     r0,#0
        STRB     r0,[r4,#1]
|L1.336|
        LDRB     r0,[r4,#3]
        SUBS     r0,r0,#1
        STRB     r0,[r4,#3]
        MOVS     r0,#0
        POP      {r3-r7,pc}
        ENDP

CAN_FrameProc_TxFIFOAdd PROC
        PUSH     {r4-r6,lr}
        ADD      r4,r1,r0,LSL #2
        LDRB     r6,[r1,r0,LSL #2]
        LDRB     r5,[r4,#3]
        CMP      r5,r6
        BEQ      |L1.432|
        LDRB     r6,[r4,#2]
        LDR      r5,[r2,#0]
        ADD      r6,r3,r6,LSL #4
        STR      r5,[r6,#0]
        LDRB     r6,[r4,#2]
        LDR      r5,[r2,#4]
        ADD      r6,r3,r6,LSL #4
        STR      r5,[r6,#4]
        LDRB     r6,[r4,#2]
        LDR      r5,[r2,#8]
        ADD      r6,r3,r6,LSL #4
        STR      r5,[r6,#8]
        LDRB     r5,[r4,#2]
        LDR      r2,[r2,#0xc]
        ADD      r3,r3,r5,LSL #4
        STR      r2,[r3,#0xc]
        LDRB     r2,[r4,#2]
        ADDS     r2,r2,#1
        UXTB     r2,r2
        STRB     r2,[r4,#2]
        LDRB     r0,[r1,r0,LSL #2]
        CMP      r2,r0
        BNE      |L1.422|
        MOVS     r0,#0
        STRB     r0,[r4,#2]
|L1.422|
        LDRB     r0,[r4,#3]
        ADDS     r0,r0,#1
        STRB     r0,[r4,#3]
        MOVS     r0,#0
        POP      {r4-r6,pc}
|L1.432|
        MOVS     r0,#1
        POP      {r4-r6,pc}
        ENDP

CAN_FrameProc_RxFIFOAdd PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r8,r1
        MOV      r5,r2
        MOV      r6,r3
        MOVS     r2,#0
        MOVS     r1,#0x12
        MOV      r0,r7
        BL       CAN_Interrupt_EnorDis
        ADD      r4,r8,r7,LSL #2
        LDRB     r1,[r8,r7,LSL #2]
        LDRB     r0,[r4,#3]
        CMP      r0,r1
        BEQ      |L1.568|
        LDRB     r0,[r4,#2]
        LDRB     r1,[r5,#0]
        ADD      r0,r0,r0,LSL #1
        STRB     r1,[r6,r0,LSL #2]
        LDRB     r0,[r4,#2]
        LDR      r1,[r5,#4]
        ADD      r0,r0,r0,LSL #1
        ADD      r0,r6,r0,LSL #2
        STR      r1,[r0,#4]
        LDRB     r0,[r4,#2]
        LDR      r1,[r5,#8]
        ADD      r0,r0,r0,LSL #1
        ADD      r0,r6,r0,LSL #2
        STR      r1,[r0,#8]
        LDRB     r0,[r4,#2]
        LDRH     r1,[r5,#2]
        ADD      r0,r0,r0,LSL #1
        ADD      r0,r6,r0,LSL #2
        STRH     r1,[r0,#2]
        LDRB     r0,[r4,#2]
        ADDS     r0,r0,#1
        UXTB     r0,r0
        STRB     r0,[r4,#2]
        LDRB     r1,[r8,r7,LSL #2]
        CMP      r0,r1
        BNE      |L1.546|
        MOVS     r0,#0
        STRB     r0,[r4,#2]
|L1.546|
        LDRB     r0,[r4,#3]
        ADDS     r0,r0,#1
        STRB     r0,[r4,#3]
        MOVS     r2,#1
        MOVS     r1,#0x12
        MOV      r0,r7
        BL       CAN_Interrupt_EnorDis
        MOVS     r0,#0
|L1.564|
        POP      {r4-r8,pc}
|L1.568|
        MOVS     r2,#1
        MOVS     r1,#0x12
        MOV      r0,r7
        BL       CAN_Interrupt_EnorDis
        MOVS     r0,#1
        B        |L1.564|
        ENDP

CAN_Rx_HandlerProc PROC
        PUSH     {r4,r5,lr}
        LDRB     r4,[r0,#3]
        CMP      r4,#8
        BEQ      |L1.682|
        LDR      r4,[r2,#0]
        LSLS     r4,r4,#30
        BEQ      |L1.682|
        LDR      r4,[r3,#4]
        UBFX     r5,r4,#8,#8
        LDRB     r4,[r0,#2]
        ADD      r4,r4,r4,LSL #1
        STRB     r5,[r1,r4,LSL #2]
        LDR      r4,[r3,#4]
        AND      r5,r4,#0xf
        LDRB     r4,[r0,#2]
        ADD      r4,r4,r4,LSL #1
        ADD      r4,r1,r4,LSL #2
        STRH     r5,[r4,#2]
        LDR      r5,[r3,#8]
        LDRB     r4,[r0,#2]
        ADD      r4,r4,r4,LSL #1
        ADD      r4,r1,r4,LSL #2
        STR      r5,[r4,#4]
        LDR      r4,[r3,#0xc]
        LDRB     r3,[r0,#2]
        ADD      r3,r3,r3,LSL #1
        ADD      r1,r1,r3,LSL #2
        STR      r4,[r1,#8]
        LDRB     r1,[r0,#2]
        ADDS     r1,r1,#1
        UXTB     r1,r1
        STRB     r1,[r0,#2]
        LDRB     r3,[r0,#0]
        CMP      r1,r3
        BNE      |L1.676|
        MOVS     r1,#0
        STRB     r1,[r0,#2]
|L1.676|
        LDRB     r1,[r0,#3]
        ADDS     r1,r1,#1
        STRB     r1,[r0,#3]
|L1.682|
        LDR      r0,[r2,#0]
        ORR      r0,r0,#0x20
        STR      r0,[r2,#0]
        POP      {r4,r5,pc}
        ENDP

CAN1_RX0_IRQHandler PROC
        PUSH     {r4,lr}
        LDR      r2,|L1.1020|
        LDR      r1,|L1.1028|
        LDR      r3,|L1.1032|
        ADDS     r2,r2,#0xc
        ADDS     r1,r1,#0x18
        LDR      r0,|L1.1024|
        BL       CAN_Rx_HandlerProc
        POP      {r4,pc}
        ENDP

CAN1_RX1_IRQHandler PROC
        PUSH     {r4,lr}
        LDR      r3,|L1.1032|
        LDR      r2,|L1.1020|
        LDR      r1,|L1.1028|
        LDR      r0,|L1.1024|
        ADDS     r3,r3,#0x10
        ADDS     r2,r2,#0x10
        ADDS     r1,r1,#0xd8
        ADDS     r0,r0,#0x10
        BL       CAN_Rx_HandlerProc
        POP      {r4,pc}
        ENDP

CAN_Tx_HandlerProc PROC
        PUSH     {r4-r6,lr}
        MOVS     r3,#2
        MOVS     r4,#1
        MOVS     r2,#0
|L1.744|
        LDR      r5,[r0,#0]
        TST      r5,r3
        BEQ      |L1.764|
        LDR      r5,[r1,r2,LSL #2]
        CBZ      r5,|L1.764|
        LDRB     r6,[r5,#0]
        ORR      r6,r6,#1
        STRB     r6,[r5,#0]
|L1.764|
        LDR      r5,[r0,#0]
        ORRS     r5,r5,r4
        STR      r5,[r0,#0]
        LSLS     r3,r3,#8
        LSLS     r4,r4,#8
        ADDS     r2,r2,#1
        UXTB     r2,r2
        CMP      r2,#3
        BCC      |L1.744|
        POP      {r4-r6,pc}
        ENDP

CAN1_TX_IRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.1020|
        LDR      r1,|L1.1028|
        ADDS     r0,r0,#8
        BL       CAN_Tx_HandlerProc
        POP      {r4,pc}
        ENDP

CAN2_RX0_IRQHandler PROC
        PUSH     {r4,lr}
        LDR      r1,|L1.1028|
        LDR      r0,|L1.1024|
        LDR      r3,|L1.1036|
        LDR      r2,|L1.1040|
        ADDS     r1,r1,#0x78
        ADDS     r0,r0,#4
        BL       CAN_Rx_HandlerProc
        POP      {r4,pc}
        ENDP

CAN2_RX1_IRQHandler PROC
        PUSH     {r4,lr}
        LDR      r3,|L1.1036|
        LDR      r2,|L1.1040|
        LDR      r0,|L1.1024|
        ADDS     r3,r3,#0x10
        ADDS     r2,r2,#4
        LDR      r1,|L1.1044|
        ADDS     r0,r0,#0x14
        BL       CAN_Rx_HandlerProc
        POP      {r4,pc}
        ENDP

CAN2_TX_IRQHandler PROC
        PUSH     {r4,lr}
        LDR      r1,|L1.1028|
        LDR      r0,|L1.1040|
        ADDS     r1,r1,#0xc
        SUBS     r0,r0,#4
        BL       CAN_Tx_HandlerProc
        POP      {r4,pc}
        ENDP

CAN_FilterInit PROC
        PUSH     {r4,r5,lr}
        LDR      r0,|L1.1032|
        ADDS     r0,r0,#0x90
        LDR      r4,|L1.1032|
        MOVS     r1,#0
        ADDS     r4,r4,#0x6c
        STR      r1,[r4,#0]
        LDR      r3,|L1.1048|
        MOVS     r2,#4
|L1.874|
        LDR      r5,[r3,r1,LSL #3]
        ADD      r5,r2,r5,LSL #3
        STR      r5,[r0,#0]
        LDR      r5,[r0,#0]
        STR      r5,[r0,#0x70]
        ADDS     r0,r0,#4
        ADDS     r1,r1,#1
        UXTB     r1,r1
        CMP      r1,#6
        BCC      |L1.874|
        LDR      r1,|L1.1052|
        LDR      r3,[r1,#0]  ; BMSCom_MPAtrb
        ADD      r3,r2,r3,LSL #3
        STR      r3,[r0,#0]
        LDR      r3,[r0,#0]
        STR      r3,[r0,#0x70]
        LDR      r1,[r1,#4]  ; BMSCom_MPAtrb
        ADD      r1,r2,r1,LSL #3
        STR      r1,[r0,#4]
        LDR      r1,[r0,#4]
        STR      r1,[r0,#0x74]
        LDR      r1,|L1.1056|
        LDR      r3,[r1,#0]  ; BMSCom_RAAtrb
        ADD      r3,r2,r3,LSL #3
        STR      r3,[r0,#8]
        LDR      r3,[r0,#8]
        STR      r3,[r0,#0x78]
        LDR      r1,[r1,#4]  ; BMSCom_RAAtrb
        ADD      r1,r2,r1,LSL #3
        STR      r1,[r0,#0xc]
        LDR      r1,[r0,#0xc]
        STR      r1,[r0,#0x7c]
        LDR      r0,[r4,#0]
        ORR      r0,r0,#0x1f
        STR      r0,[r4,#0]
        LDR      r0,[r4,#0]
        LDR      r1,[r4,#0]
        ORR      r0,r0,r1,LSL #14
        STR      r0,[r4,#0]
        POP      {r4,r5,pc}
        ENDP

CAN_FuncInit PROC
        PUSH     {r4-r6,lr}
        LDR      r0,|L1.1060|
        LDR      r1,[r0,#0x1c]
        ORR      r1,r1,#0x6000000
        STR      r1,[r0,#0x1c]
        LDR      r1,[r0,#0x18]
        ORR      r1,r1,#0xd
        STR      r1,[r0,#0x18]
        LDR      r0,|L1.1064|
        LDR      r1,[r0,#0]
        BIC      r1,r1,#0x33000
        STR      r1,[r0,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#0x30000
        STR      r1,[r0,#0]
        LDR      r2,|L1.1064|
        ASRS     r1,r0,#19
        ADDS     r2,r2,#0xc
        STR      r1,[r2,#0]
        LDR      r1,[r0,#0]
        B        |L1.1068|
|L1.1020|
        DCD      0x40006400
|L1.1024|
        DCD      ||.data||
|L1.1028|
        DCD      ||.bss||
|L1.1032|
        DCD      0x400065b0
|L1.1036|
        DCD      0x400069b0
|L1.1040|
        DCD      0x4000680c
|L1.1044|
        DCD      ||.bss||+0x138
|L1.1048|
        DCD      BMSCom_FrameGB_ReceDataAtrb
|L1.1052|
        DCD      BMSCom_MPAtrb
|L1.1056|
        DCD      BMSCom_RAAtrb
|L1.1060|
        DCD      0x40021000
|L1.1064|
        DCD      0x40010804
|L1.1068|
        BIC      r1,r1,#0xcc000
        STR      r1,[r0,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#0x88000
        STR      r1,[r0,#0]
        LDR      r6,|L1.1344|
        LDR      r0,[r6,#0]
        EOR      r0,r0,#3
        STR      r0,[r6,#0]
        ADDS     r4,r6,#4
|L1.1094|
        LDR      r0,[r4,#0]
        AND      r0,r0,#3
        CMP      r0,#1
        BNE      |L1.1094|
        LDR      r0,[r6,#0]
        ORR      r0,r0,#0x64
        STR      r0,[r6,#0]
        LDR      r0,|L1.1344|
        LDR      r5,|L1.1348|
        ADDS     r0,r0,#0x1c
        STR      r5,[r0,#0]
        LDR      r0,|L1.1344|
        ADDS     r0,r0,#0x14
        LDR      r1,[r0,#0]
        ORR      r1,r1,#0x13
        STR      r1,[r0,#0]
        LDR      r1,|L1.1352|
        LDR      r0,[r1,#0]
        ORR      r0,r0,#1
        STR      r0,[r1,#0]
        LDR      r2,|L1.1352|
        MVN      r0,#0xf0000000
        ADDS     r2,r2,#0xc
        STR      r0,[r2,#0]
        MOVS     r2,#0
        ADDS     r0,r1,#4
        STR      r2,[r0,#0]
        LDR      r2,[r0,#0]
        ORR      r2,r2,#0x18
        STR      r2,[r0,#0]
        LDR      r2,[r0,#0]
        ORR      r2,r2,#7
        STR      r2,[r0,#0]
        LDR      r2,[r0,#0]
        LDR      r3,[r0,#0]
        ORR      r2,r2,r3,LSL #14
        STR      r2,[r0,#0]
        LDR      r0,|L1.1352|
        MOVS     r2,#0x18
        ADDS     r0,r0,#0x14
        STR      r2,[r0,#0]
        LDR      r2,[r0,#0]
        LDR      r3,[r0,#0]
        ORR      r2,r2,r3,LSL #14
        STR      r2,[r0,#0]
        LDR      r0,[r1,#0]
        BIC      r0,r0,#1
        STR      r0,[r1,#0]
        BL       CAN_FilterInit
        LDR      r0,[r6,#0]
        BIC      r0,r0,#1
        STR      r0,[r6,#0]
|L1.1222|
        LDR      r0,[r4,#0]
        LSLS     r0,r0,#31
        BNE      |L1.1222|
        LDR      r0,|L1.1356|
        LDR      r1,[r0,#4]
        ORR      r1,r1,#0x400000
        STR      r1,[r0,#4]
        LDR      r0,|L1.1360|
        LDR      r1,[r0,#0]
        BIC      r1,r1,#0x3300000
        STR      r1,[r0,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#0x3000000
        STR      r1,[r0,#0]
        LDR      r2,|L1.1360|
        MOVS     r1,#0x20
        ADDS     r2,r2,#0x10
        STR      r1,[r2,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#0xcc00000
        STR      r1,[r0,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#0x8800000
        STR      r1,[r0,#0]
        LDR      r2,|L1.1364|
        LDR      r0,[r2,#0]
        EOR      r0,r0,#3
        STR      r0,[r2,#0]
        ADDS     r0,r2,#4
|L1.1292|
        LDR      r1,[r0,#0]
        AND      r1,r1,#3
        CMP      r1,#1
        BNE      |L1.1292|
        LDR      r1,[r2,#0]
        ORR      r1,r1,#0x64
        STR      r1,[r2,#0]
        LDR      r1,|L1.1364|
        ADDS     r1,r1,#0x1c
        STR      r5,[r1,#0]
        LDR      r1,|L1.1364|
        ADDS     r1,r1,#0x14
        LDR      r3,[r1,#0]
        ORR      r3,r3,#0x13
        STR      r3,[r1,#0]
        LDR      r1,[r2,#0]
        BIC      r1,r1,#1
        STR      r1,[r2,#0]
|L1.1336|
        LDR      r1,[r0,#0]
        LSLS     r1,r1,#31
        BNE      |L1.1336|
        POP      {r4-r6,pc}
        ENDP

|L1.1344|
        DCD      0x40006400
|L1.1348|
        DCD      0x01580011
|L1.1352|
        DCD      0x40006600
|L1.1356|
        DCD      0x40010000
|L1.1360|
        DCD      0x40010c00
|L1.1364|
        DCD      0x40006800

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

SendMBS
        %        24
CAN_ReceFIFO
        %        192
CAN_ReceSAEFIFO
        %        192

        AREA ||area_number.4||, DATA, NOINIT, ALIGN=2

        EXPORTAS ||area_number.4||, ||.bss||
CAN_SendFIFO
        %        256

        AREA ||area_number.5||, DATA, NOINIT, ALIGN=2

        EXPORTAS ||area_number.5||, ||.bss||
CAN_SendSAEFIFO
        %        256

        AREA ||.data||, DATA, ALIGN=0

CAN_RxFIFO_Mange
        DCB      0x08,0x00,0x00,0x00
        DCB      0x08,0x00,0x00,0x00
CAN_TxFIFO_Mange
        DCB      0x08,0x00,0x00,0x00
        DCB      0x08,0x00,0x00,0x00
CAN_RxSAEFIFO_Mange
        DCB      0x08,0x00,0x00,0x00
        DCB      0x08,0x00,0x00,0x00

        AREA ||area_number.8||, DATA, ALIGN=0

        EXPORTAS ||area_number.8||, ||.data||
CAN_TxSAEFIFO_Mange
        DCB      0x08,0x00,0x00,0x00
        DCB      0x08,0x00,0x00,0x00

        EXPORT CAN_FIFO_Init [CODE]
        EXPORT CAN_FrameProc_RxFIFORece [CODE]
        EXPORT CAN_FrameProc_TxFIFOSend [CODE]
        EXPORT CAN_FrameProc_TxFIFOAdd [CODE]
        EXPORT CAN_FrameProc_RxFIFOAdd [CODE]
        EXPORT CAN1_RX0_IRQHandler [CODE]
        EXPORT CAN1_RX1_IRQHandler [CODE]
        EXPORT CAN1_TX_IRQHandler [CODE]
        EXPORT CAN2_RX0_IRQHandler [CODE]
        EXPORT CAN2_RX1_IRQHandler [CODE]
        EXPORT CAN2_TX_IRQHandler [CODE]
        EXPORT CAN_FilterInit [CODE]
        EXPORT CAN_FuncInit [CODE]
        EXPORT CAN_ReceFIFO [DATA,SIZE=192]
        EXPORT CAN_ReceSAEFIFO [DATA,SIZE=192]
        EXPORT CAN_SendFIFO [DATA,SIZE=256]
        EXPORT CAN_SendSAEFIFO [DATA,SIZE=256]
        EXPORT CAN_RxFIFO_Mange [DATA,SIZE=8]
        EXPORT CAN_TxFIFO_Mange [DATA,SIZE=8]
        EXPORT CAN_RxSAEFIFO_Mange [DATA,SIZE=8]
        EXPORT CAN_TxSAEFIFO_Mange [DATA,SIZE=8]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT BMSCom_FrameGB_ReceDataAtrb [DATA]
        IMPORT BMSCom_MPAtrb [DATA]
        IMPORT BMSCom_RAAtrb [DATA]

        KEEP CAN_Interrupt_EnorDis
        KEEP CAN_FrameTestSend
        KEEP CAN_FrameSend
        KEEP CAN_Rx_HandlerProc
        KEEP CAN_Tx_HandlerProc
        KEEP SendMBS

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,5
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
